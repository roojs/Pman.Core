{
 "items" : [
  {
   "$ xns" : "Roo",
   "closable" : true,
   "collapsible" : false,
   "draggable" : false,
   "height" : 400,
   "items" : [
    {
     "$ xns" : "Roo",
     "* prop" : "center",
     "xtype" : "LayoutRegion"
    },
    {
     "$ xns" : "Roo",
     "listeners" : {
      "render" : [
       "function (_self)",
       "{",
       "    _this.websiteViewPanel = this;",
       "}"
      ]
     },
     "region" : "center",
     "xtype" : "ContentPanel"
    },
    {
     "$ xns" : "Roo",
     "* prop" : "buttons[]",
     "listeners" : {
      "click" : [
       "function (_self, e)",
       "{",
       "    _this.dialog.hide();",
       "}"
      ]
     },
     "text" : "Ok",
     "xtype" : "Button"
    }
   ],
   "listeners" : {
    "show" : [
     "function (_self)",
     "{",
     "    // reset",
     "    _this.websiteViewPanel.setContent('');",
     "    _this.websiteViewPanel.el.dom.parentElement.style.overflow = 'hidden';",
     "    ",
     "    var url = false;",
     "    ",
     "    if(typeof(_this.data.url) !== 'undefined') {",
     "        url = _this.data.url;",
     "    }",
     "    ",
     "    if(url === false) {",
     "        Roo.MessageBox.alert(\"Error\", \"Missing url\");",
     "        return;",
     "    }",
     "    ",
     "    _this.websiteViewPanel.setContent('Loading...');",
     "    ",
     "    _this.dialog.setTitle('View URL: ' + url);",
     "    ",
     "    var vw = Roo.lib.Dom.getViewWidth();",
     "    var vh = Roo.lib.Dom.getViewHeight();",
     "    _this.dialog.resizeTo(vw * 0.9, vh * 0.9);",
     "    _this.dialog.moveTo(vw * 0.05, vh * 0.05);",
     "    ",
     "    var size = _this.dialog.layout.getRegion('center').el.getSize();",
     "    ",
     "    ",
     "    // different origin",
     "    if (!url.startsWith('/')) {",
     "        // allow scroll",
     "        _this.websiteViewPanel.el.dom.parentElement.style.overflow = 'auto';",
     "        fetch(baseURL + '/Core/ViewWebsite', {",
     "            method: 'POST',",
     "            headers: {'Content-Type': 'application/x-www-form-urlencoded'},",
     "            body: new URLSearchParams({\"url\": url})",
     "        })",
     "        .then(function(res) {",
     "            var contentType = res.headers.get('Content-Type');",
     "            if (contentType && contentType.includes('application/json')) {",
     "                return res.json().then(function(json) {",
     "                    var formatted = '<pre>' + JSON.stringify(json, null, 2) + '</pre>';",
     "                      // URL regex pattern that matches http, https, ftp, and www URLs",
     "                      var urlRegex = /(https?:\\/\\/[^\\s<>\"']+|ftp:\\/\\/[^\\s<>\"']+|www\\.[^\\s<>\"']+)/gi;",
     "                      var withLink = formatted.replace(urlRegex, function(url) {",
     "                          // Ensure protocol is present for www URLs",
     "                          var href = url;",
     "                          if (url.toLowerCase().startsWith('www.')) {",
     "                              href = 'http://' + url;",
     "                          }",
     "                          ",
     "                          // Create clickable link that opens in new tab",
     "                          return '<a href=\"' + href + '\" target=\"_blank\" style=\"color: #0066cc; text-decoration: underline;\">' + url + '</a>';",
     "                      });",
     "                    _this.websiteViewPanel.setContent(formatted);",
     "                });",
     "            } else if (contentType && contentType.includes('application/rss+xml')) { ",
     "                return res.text().then(function(xml) {",
     "                    if(xml == ''){",
     "                        _this.websiteViewPanel.setContent('Empty xml?');",
     "                        return;",
     "                    }",
     "                    var parser = new DOMParser();",
     "                    var xmlDoc = parser.parseFromString(xml.trim(), \"application/xml\");",
     "",
     "                    // Serialize back to string with formatting",
     "                    var serializer = new XMLSerializer();",
     "                    var prettyXML = serializer.serializeToString(xmlDoc);",
     "                    ",
     "                    var escaped = prettyXML",
     "                      .replace(/&/g, '&amp;')",
     "                      .replace(/</g, '&lt;')",
     "                      .replace(/>/g, '&gt;');",
     "                      ",
     "                      // URL regex pattern that matches http, https, ftp, and www URLs",
     "                      var urlRegex = /(https?:\\/\\/[^\\s<>\"']+|ftp:\\/\\/[^\\s<>\"']+|www\\.[^\\s<>\"']+)(?=&lt;)/gi;",
     "                      ",
     "                      var withLink = escaped.replace(urlRegex, function(url) {",
     "                          // Ensure protocol is present for www URLs",
     "                          var href = url;",
     "                          if (url.toLowerCase().startsWith('www.')) {",
     "                              href = 'http://' + url;",
     "                          }",
     "                          ",
     "                          // Create clickable link that opens in new tab",
     "                          return '<a href=\"' + href + '\" target=\"_blank\" style=\"color: #0066cc; text-decoration: underline;\">' + url + '</a>';",
     "                      });",
     "                      ",
     "                    _this.websiteViewPanel.setContent('<pre style=\"white-space: pre-wrap;\">' + withLink + '</pre>');",
     "                });",
     "            } else {",
     "                return res.text().then(function(html) {",
     "                    _this.websiteViewPanel.setContent('<div>' + html + '</div>');",
     "                });",
     "            }",
     "        });",
     "        return;",
     "    }",
     "    ",
     "    _this.websiteViewPanel.setContent(",
     "        '<iframe ' + ",
     "        'style=\"border: 0px;width:' + size.width +'px;height:' + size.height + 'px\" ' +",
     "        'src=\"' + url + '\"/>'",
     "    );",
     "}"
    ]
   },
   "modal" : true,
   "resizable" : false,
   "title" : "View Website",
   "width" : 600,
   "xtype" : "LayoutDialog"
  }
 ],
 "modOrder" : "001",
 "name" : "Pman.Dialog.CoreViewWebsite",
 "parent" : "",
 "path" : "/home/leon/gitlive/web.MediaOutreach/Pman/Core/Pman.Dialog.CoreViewWebsite.bjs",
 "permname" : "",
 "strings" : {
  "1e35fe802ad1aaf4414fd68ad3157675" : "View Website",
  "a60852f204ed8028c1c58808b746d115" : "Ok"
 },
 "title" : ""
}