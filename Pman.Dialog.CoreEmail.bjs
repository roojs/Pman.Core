{
 "items" : [
  {
   "$ xns" : "Roo",
   "closable" : true,
   "collapsible" : false,
   "height" : 500,
   "items" : [
    {
     "$ xns" : "Roo",
     "* prop" : "center",
     "tabPosition" : "top",
     "xtype" : "LayoutRegion"
    },
    {
     "$ xns" : "Roo",
     "* prop" : "east",
     "hidden" : true,
     "split" : true,
     "title" : "Images / Attachments",
     "titlebar" : true,
     "width" : 500,
     "xtype" : "LayoutRegion"
    },
    {
     "$ xns" : "Roo",
     "background" : false,
     "items" : [
      {
       "$ xns" : "Roo",
       "* prop" : "layout",
       "items" : [
        {
         "$ xns" : "Roo",
         "* prop" : "center",
         "xtype" : "LayoutRegion"
        },
        {
         "$ xns" : "Roo",
         "* prop" : "east",
         "width" : 380,
         "xtype" : "LayoutRegion"
        },
        {
         "$ xns" : "Roo",
         "autoScroll" : true,
         "fitToFrame" : true,
         "items" : [
          {
           "$ url" : "baseURL + '/Roo/Crm_person.php'",
           "$ validEmail" : [
            "function() {",
            "",
            "    //var vtype = 'email';",
            "    var allowBlank = false;",
            "    var email_fails = 0;",
            "    ",
            "    // allow blank email if contact is not empty",
            "    if(_this.form.findField('office_phone').getValue()){",
            "        //vtype = '';",
            "        allowBlank = true;",
            "        if(!_this.form.findField('email').getValue()) {",
            "            email_fails = 10;",
            "        }",
            "    }",
            "    ",
            "    //_this.emailField.vtype = vtype;",
            "    _this.emailField.allowBlank = allowBlank;",
            "    _this.emailField.validate();",
            "    _this.form.findField('email_fails').setValue(email_fails);",
            "    ",
            "    // keep original email fails if no email change",
            "    if(_this.form.findField('email').getValue() == _this.data.email) {",
            "        _this.form.findField('email_fails').setValue(_this.data.email_fails);",
            "    }",
            "}",
            ""
           ],
           "$ xns" : "Roo.form",
           "items" : [
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "items" : [
                  {
                   "$ xns" : "Roo.form",
                   "fieldLabel" : "Un-subscribed",
                   "name" : "crm_is_unsubscribed",
                   "width" : 150,
                   "xtype" : "Checkbox"
                  }
                 ],
                 "labelWidth" : 140,
                 "width" : 180,
                 "xtype" : "Column"
                },
                {
                 "$ xns" : "Roo.form",
                 "items" : [
                  {
                   "$ xns" : "Roo.form",
                   "fieldLabel" : "For my eyes only",
                   "name" : "crm_is_private",
                   "width" : 200,
                   "xtype" : "Checkbox"
                  }
                 ],
                 "labelWidth" : 140,
                 "width" : 200,
                 "xtype" : "Column"
                }
               ],
               "width" : 420,
               "xtype" : "Row"
              },
              {
               "$ xns" : "Roo.form",
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "items" : [
                  {
                   "$ xns" : "Roo.form",
                   "allowBlank" : true,
                   "displayField" : "val",
                   "editable" : false,
                   "fieldLabel" : "Honorific",
                   "forceSelection" : false,
                   "items" : [
                    {
                     "$ data" : [
                      "[ ",
                      "    [ 'Mr' ],",
                      "    [ 'Mrs' ],",
                      "    [ 'Ms' ]",
                      "]"
                     ],
                     "$ fields" : "[ 'val']",
                     "$ xns" : "Roo.data",
                     "* prop" : "store",
                     "xtype" : "SimpleStore"
                    }
                   ],
                   "listWidth" : 200,
                   "loadingText" : "Searching...",
                   "mode" : "local",
                   "name" : "honor",
                   "selectOnFocus" : false,
                   "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{val}</b> </div>",
                   "triggerAction" : "all",
                   "typeAhead" : true,
                   "valueField" : "type",
                   "width" : 100,
                   "xtype" : "ComboBox"
                  }
                 ],
                 "labelWidth" : 140,
                 "width" : 400,
                 "xtype" : "Column"
                }
               ],
               "width" : 420,
               "xtype" : "Row"
              },
              {
               "$ xns" : "Roo.form",
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "items" : [
                  {
                   "$ xns" : "Roo.form",
                   "allowBlank" : false,
                   "fieldLabel" : "First Name",
                   "name" : "firstname",
                   "width" : 200,
                   "xtype" : "TextField"
                  },
                  {
                   "$ xns" : "Roo.form",
                   "allowBlank" : false,
                   "fieldLabel" : "Last Name",
                   "name" : "lastname",
                   "width" : 200,
                   "xtype" : "TextField"
                  },
                  {
                   "$ xns" : "Roo.form",
                   "fieldLabel" : "Job Title",
                   "name" : "role",
                   "width" : 200,
                   "xtype" : "TextField"
                  },
                  {
                   "$ xns" : "Roo.form",
                   "allowBlank" : true,
                   "alwaysQuery" : true,
                   "displayField" : "display_name",
                   "editable" : true,
                   "emptyText" : "Select Job Function",
                   "fieldLabel" : "Job Function",
                   "forceSelection" : true,
                   "hiddenName" : "crm_role_function_id",
                   "items" : [
                    {
                     "$ sortInfo" : "{ direction : 'ASC', field: 'display_name' }",
                     "$ xns" : "Roo.data",
                     "* prop" : "store",
                     "items" : [
                      {
                       "$ url" : "baseURL + '/Roo/core_enum.php'",
                       "$ xns" : "Roo.data",
                       "* prop" : "proxy",
                       "method" : "GET",
                       "xtype" : "HttpProxy"
                      },
                      {
                       "$ fields" : "[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"etype\",\"type\":\"string\"}]",
                       "$ xns" : "Roo.data",
                       "* prop" : "reader",
                       "id" : "id",
                       "root" : "data",
                       "totalProperty" : "total",
                       "xtype" : "JsonReader"
                      }
                     ],
                     "listeners" : {
                      "|beforeload" : [
                       "function (_self, o){",
                       "    o.params = o.params || {};",
                       "    // set more here",
                       "    o.params.etype = 'crm_role_function';",
                       "    o.params.active  = 1;",
                       "}",
                       ""
                      ]
                     },
                     "remoteSort" : true,
                     "xtype" : "Store"
                    }
                   ],
                   "listWidth" : 400,
                   "listeners" : {
                    "add" : [
                     "function (combo)",
                     "{",
                     "    Pman.Dialog.CrmJobFunction.show({id:0});",
                     "}"
                    ]
                   },
                   "loadingText" : "Searching...",
                   "minChars" : 1,
                   "name" : "crm_role_function_id_display_name",
                   "pageSize" : 20,
                   "qtip" : "Select Job Function",
                   "queryParam" : "search[display_name]",
                   "selectOnFocus" : true,
                   "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{display_name}</b> </div>",
                   "triggerAction" : "all",
                   "typeAhead" : false,
                   "valueField" : "id",
                   "width" : 200,
                   "xtype" : "ComboBox"
                  },
                  {
                   "$ xns" : "Roo.form",
                   "allowBlank" : false,
                   "alwaysQuery" : true,
                   "displayField" : "title",
                   "editable" : true,
                   "fieldLabel" : "Spoken Language",
                   "forceSelection" : false,
                   "hiddenName" : "lang",
                   "items" : [
                    {
                     "$ sortInfo" : "{ direction : 'ASC', field: 'lval' }",
                     "$ xns" : "Roo.data",
                     "* prop" : "store",
                     "items" : [
                      {
                       "$ url" : "baseURL + '/Roo/I18n.php'",
                       "$ xns" : "Roo.data",
                       "* prop" : "proxy",
                       "method" : "GET",
                       "xtype" : "HttpProxy"
                      },
                      {
                       "$ fields" : [
                        "[",
                        "    {",
                        "        'name': 'code',",
                        "        'type': 'string'",
                        "    },",
                        "    {",
                        "        'name': 'title',",
                        "        'type': 'string'",
                        "    }",
                        "    ",
                        "]"
                       ],
                       "$ xns" : "Roo.data",
                       "* prop" : "reader",
                       "id" : "id",
                       "root" : "data",
                       "totalProperty" : "total",
                       "xtype" : "JsonReader"
                      }
                     ],
                     "listeners" : {
                      "|beforeload" : [
                       "function (_self, o){",
                       "    o.params = o.params || {};",
                       "    // set more here",
                       "    //o.params.etype = 'COMPTYPE';",
                       "    o.params.ltype = 'l';",
                       "    o.params._as_code_and_title = 1;",
                       "}",
                       ""
                      ]
                     },
                     "remoteSort" : true,
                     "xtype" : "Store"
                    }
                   ],
                   "listWidth" : 400,
                   "loadingText" : "Searching...",
                   "minChars" : 1,
                   "name" : "lang_name",
                   "pageSize" : 20,
                   "qtip" : "Select core_enum",
                   "queryParam" : "_title",
                   "selectOnFocus" : true,
                   "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{title}</b> </div>",
                   "triggerAction" : "all",
                   "typeAhead" : true,
                   "valueField" : "code",
                   "width" : 200,
                   "xtype" : "ComboBox"
                  },
                  {
                   "$ xns" : "Roo.form",
                   "fieldLabel" : "Locations Covered/Targeted",
                   "hiddenName" : "crm_location_covered",
                   "items" : [
                    {
                     "$ xns" : "Roo.form",
                     "* prop" : "combo",
                     "allowBlank" : true,
                     "alwaysQuery" : true,
                     "displayField" : "display_name",
                     "editable" : true,
                     "forceSelection" : true,
                     "idField" : "id",
                     "items" : [
                      {
                       "$ sortInfo" : "{ direction : 'ASC', field: 'display_name' }",
                       "$ xns" : "Roo.data",
                       "* prop" : "store",
                       "items" : [
                        {
                         "$ url" : "baseURL + '/Roo/core_enum.php'",
                         "$ xns" : "Roo.data",
                         "* prop" : "proxy",
                         "method" : "GET",
                         "xtype" : "HttpProxy"
                        },
                        {
                         "$ fields" : "[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"etype\",\"type\":\"string\"}]",
                         "$ xns" : "Roo.data",
                         "* prop" : "reader",
                         "id" : "code",
                         "root" : "data",
                         "totalProperty" : "total",
                         "xtype" : "JsonReader"
                        }
                       ],
                       "listeners" : {
                        "beforeload" : [
                         "function (_self, o){",
                         "    o.params = o.params || {};",
                         "    // set more here",
                         "    o.params.etype = 'crm_location_covered';",
                         "    o.params.active  = 1;",
                         "}",
                         ""
                        ]
                       },
                       "remoteSort" : true,
                       "xtype" : "Store"
                      }
                     ],
                     "listWidth" : 400,
                     "listeners" : {
                      "add" : [
                       "function (combo)",
                       "{",
                       "   Pman.Dialog.CrmLocationCovered.show({ id: 0 }, function(data) { ",
                       "       ",
                       "        // add it to this ...",
                       "    });",
                       "    ",
                       "    ",
                       "}"
                      ],
                      "render" : [
                       "function (_self)",
                       "{",
                       " combo.addicon.setStyle( {",
                       "        position : 'absolute',",
                       "        right: '9px',",
                       "        top : '2px',",
                       "        float : 'left'",
                       "    });",
                       "}"
                      ]
                     },
                     "minChars" : 1,
                     "nameField" : "display_name",
                     "pageSize" : 25,
                     "queryParam" : "search[display_name]",
                     "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{display_name}</b> </div>",
                     "triggerAction" : "all",
                     "valueField" : "id",
                     "width" : 217,
                     "xtype" : "ComboBox"
                    }
                   ],
                   "name" : "crm_location_covered_display_name",
                   "width" : 215,
                   "xtype" : "ComboBoxArray"
                  },
                  {
                   "$ xns" : "Roo.form",
                   "allowBlank" : true,
                   "alwaysQuery" : true,
                   "displayField" : "display_name",
                   "editable" : true,
                   "emptyText" : "Select Current Relationship",
                   "fieldLabel" : "Current Relationship",
                   "forceSelection" : true,
                   "hiddenName" : "crm_current_relationship_id",
                   "items" : [
                    {
                     "$ sortInfo" : "{ direction : 'ASC', field: 'display_name' }",
                     "$ xns" : "Roo.data",
                     "* prop" : "store",
                     "items" : [
                      {
                       "$ url" : "baseURL + '/Roo/core_enum.php'",
                       "$ xns" : "Roo.data",
                       "* prop" : "proxy",
                       "method" : "GET",
                       "xtype" : "HttpProxy"
                      },
                      {
                       "$ fields" : "[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"etype\",\"type\":\"string\"}]",
                       "$ xns" : "Roo.data",
                       "* prop" : "reader",
                       "id" : "id",
                       "root" : "data",
                       "totalProperty" : "total",
                       "xtype" : "JsonReader"
                      }
                     ],
                     "listeners" : {
                      "|beforeload" : [
                       "function (_self, o){",
                       "    o.params = o.params || {};",
                       "    // set more here",
                       "    o.params.etype = 'crm_current_relationship_id';",
                       "    o.params.active  = 1;",
                       "}",
                       ""
                      ]
                     },
                     "remoteSort" : true,
                     "xtype" : "Store"
                    }
                   ],
                   "listWidth" : 400,
                   "loadingText" : "Searching...",
                   "minChars" : 1,
                   "name" : "crm_current_relationship_id_display_name",
                   "pageSize" : 20,
                   "qtip" : "Select Current Relationship",
                   "queryParam" : "search[display_name]",
                   "selectOnFocus" : true,
                   "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{display_name}</b> </div>",
                   "triggerAction" : "all",
                   "typeAhead" : false,
                   "valueField" : "id",
                   "width" : 200,
                   "xtype" : "ComboBox"
                  },
                  {
                   "$ xns" : "Roo.form",
                   "allowBlank" : true,
                   "alwaysQuery" : true,
                   "displayField" : "display_name",
                   "editable" : true,
                   "emptyText" : "Select a Source",
                   "fieldLabel" : "Source",
                   "forceSelection" : true,
                   "hiddenName" : "crm_source_id",
                   "items" : [
                    {
                     "$ sortInfo" : "{ direction : 'ASC', field: 'display_name' }",
                     "$ xns" : "Roo.data",
                     "* prop" : "store",
                     "items" : [
                      {
                       "$ url" : "baseURL + '/Roo/core_enum.php'",
                       "$ xns" : "Roo.data",
                       "* prop" : "proxy",
                       "method" : "GET",
                       "xtype" : "HttpProxy"
                      },
                      {
                       "$ fields" : "[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"etype\",\"type\":\"string\"}]",
                       "$ xns" : "Roo.data",
                       "* prop" : "reader",
                       "id" : "id",
                       "root" : "data",
                       "totalProperty" : "total",
                       "xtype" : "JsonReader"
                      }
                     ],
                     "listeners" : {
                      "|beforeload" : [
                       "function (_self, o){",
                       "    o.params = o.params || {};",
                       "    // set more here",
                       "    o.params.etype = 'crm_source';",
                       "    o.params.active  = 1;",
                       "}",
                       ""
                      ]
                     },
                     "remoteSort" : true,
                     "xtype" : "Store"
                    }
                   ],
                   "listWidth" : 400,
                   "listeners" : {
                    "add" : [
                     "function (combo)",
                     "{",
                     "    Pman.Dialog.CrmSource.show({id:0});",
                     "}"
                    ]
                   },
                   "loadingText" : "Searching...",
                   "minChars" : 1,
                   "name" : "crm_source_id_display_name",
                   "pageSize" : 20,
                   "qtip" : "Select a Source",
                   "queryParam" : "search[display_name]",
                   "selectOnFocus" : true,
                   "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{display_name}</b> </div>",
                   "triggerAction" : "all",
                   "typeAhead" : false,
                   "valueField" : "id",
                   "width" : 200,
                   "xtype" : "ComboBox"
                  },
                  {
                   "$ xns" : "Roo.form",
                   "items" : [
                    {
                     "$ xns" : "Roo.form",
                     "items" : [
                      {
                       "$ xns" : "Roo.form",
                       "fieldLabel" : "Primary Contact",
                       "name" : "crm_is_primary_contact",
                       "width" : 200,
                       "xtype" : "Checkbox"
                      }
                     ],
                     "labelWidth" : 140,
                     "width" : 180,
                     "xtype" : "Column"
                    },
                    {
                     "$ xns" : "Roo.form",
                     "items" : [
                      {
                       "$ xns" : "Roo.form",
                       "fieldLabel" : "Key Decision Maker",
                       "name" : "crm_is_decision_maker",
                       "width" : 200,
                       "xtype" : "Checkbox"
                      }
                     ],
                     "labelWidth" : 140,
                     "width" : 200,
                     "xtype" : "Column"
                    }
                   ],
                   "width" : 500,
                   "xtype" : "Row"
                  }
                 ],
                 "labelWidth" : 140,
                 "width" : 400,
                 "xtype" : "Column"
                }
               ],
               "width" : 420,
               "xtype" : "Row"
              }
             ],
             "legend" : "Personal Details",
             "xtype" : "FieldSet"
            },
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "String boxLabel" : "Always File Messages from this Person in Project",
               "fieldLabel" : "AutoFile?",
               "name" : "project_id_fs",
               "width" : 200,
               "xtype" : "Checkbox"
              },
              {
               "$ xns" : "Roo.form",
               "String/Roo.Template tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{name}</b></div>",
               "bool editable" : true,
               "boolean allowBlank" : true,
               "displayField" : "name",
               "emptyText" : "Select Campaign",
               "fieldLabel" : "Campaign",
               "forceSelection" : true,
               "hiddenName" : "project_id",
               "items" : [
                {
                 "$ Object sortInfo" : "{field : 'name', direction : 'ASC'}",
                 "$ xns" : "Roo.data",
                 "* prop" : "store",
                 "boolean remoteSort" : true,
                 "items" : [
                  {
                   "$ url" : "baseURL + '/Roo/Core_project.php'",
                   "$ xns" : "Roo.data",
                   "* prop" : "proxy",
                   "method" : "GET",
                   "xtype" : "HttpProxy"
                  },
                  {
                   "$ xns" : "Roo.data",
                   "* prop" : "reader",
                   "id" : "id",
                   "root" : "data",
                   "totalProperty" : "total",
                   "xtype" : "JsonReader"
                  }
                 ],
                 "listeners" : {
                  "|beforeload" : [
                   "function (_self, o)",
                   "{",
                   "    o.params = o.params || {};",
                   "    // o.params.client_id = Pman.Login.authUser.company_id;",
                   "    if (Pman.hasPerm('PressRelease.MainTab','S')) {",
                   "        o.params['!pressrelease_id']= 0;",
                   "        this.sortInfo.field = 'id';",
                   "    }",
                   "    ",
                   "}"
                  ]
                 },
                 "xtype" : "Store"
                },
                {
                 "$ xns" : "Roo",
                 "* prop" : "tpl",
                 "string html" : "<div class=\"x-grid-cell-text x-btn button\">{pressrelease_id:this.formatPR}{name:this.formatName} </div>",
                 "xtype" : "Template",
                 "| function formatName" : [
                  "function(v, allv) {",
                  "    return  String.format(allv.pressrelease_id*1? '{0}' :  '<B>{0}</B>',v )",
                  " }"
                 ],
                 "| function formatPR" : [
                  "function(v, allv) {",
                  "       return  String.format(v*1? '#<B>{0}</B> ' :  '',v )",
                  " }"
                 ]
                }
               ],
               "listWidth" : 300,
               "listeners" : {
                "beforerender" : [
                 "function (_self)",
                 "{",
                 "    if(typeof(Pman.Tab.PressReleaseTab) != 'undefined'){",
                 "        this.tpl = '<div class=\"x-grid-cell-text x-btn button\"><b>#{pressrelease_id} - {name}</b></div>';",
                 "    }",
                 "    ",
                 "}"
                ]
               },
               "loadingText" : "Searching...",
               "minChars" : 2,
               "name" : "project_id_name",
               "pageSize" : 100,
               "qtip" : "Select Project ",
               "queryParam" : "query[name]",
               "selectOnFocus" : true,
               "triggerAction" : "all",
               "typeAhead" : true,
               "valueField" : "id",
               "width" : 200,
               "xtype" : "ComboBox"
              },
              {
               "$ xns" : "Roo.form",
               "fieldLabel" : "Is Action Required?",
               "name" : "is_action_required",
               "width" : 200,
               "xtype" : "Checkbox"
              }
             ],
             "legend" : "Project Filing",
             "listeners" : {
              "render" : [
               "function (self) {",
               "",
               "",
               "    _this.project  = this;",
               "    this.hide();",
               "}"
              ]
             },
             "xtype" : "FieldSet"
            },
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "allowBlank" : false,
                 "fieldLabel" : "Email",
                 "listeners" : {
                  "blur" : [
                   "function (_self)",
                   "{",
                   "    _this.form.validEmail();",
                   "}"
                  ],
                  "render" : [
                   "function (_self)",
                   "{",
                   "    _this.emailField = _self;",
                   "}"
                  ]
                 },
                 "name" : "email",
                 "vtype" : "email",
                 "width" : 290,
                 "xtype" : "TextField"
                },
                {
                 "$ xns" : "Roo.form",
                 "fieldLabel" : "Secondary Email",
                 "name" : "alt_email",
                 "vtype" : "email",
                 "width" : 290,
                 "xtype" : "TextField"
                },
                {
                 "$ xns" : "Roo.form",
                 "fieldLabel" : "Twitter handle",
                 "name" : "url_twitter",
                 "width" : 290,
                 "xtype" : "TextField"
                },
                {
                 "$ xns" : "Roo.form",
                 "fieldLabel" : "Blog Website",
                 "name" : "url_blog",
                 "vtype" : "url",
                 "width" : 290,
                 "xtype" : "TextField"
                },
                {
                 "$ xns" : "Roo.form",
                 "fieldLabel" : "LinkedIn",
                 "name" : "url_linkedin",
                 "vtype" : "url",
                 "width" : 290,
                 "xtype" : "TextField"
                },
                {
                 "$ xns" : "Roo.form",
                 "fieldLabel" : "WeChat ID",
                 "name" : "wechat_id",
                 "width" : 290,
                 "xtype" : "TextField"
                }
               ],
               "labelWidth" : 110,
               "width" : 420,
               "xtype" : "Row"
              }
             ],
             "legend" : "Contact Details",
             "xtype" : "FieldSet"
            },
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "fieldLabel" : "Office",
                 "listeners" : {
                  "render" : [
                   "function (_self)",
                   "{",
                   "    this.el.on('click', function(){",
                   "         var rowIndex = -1;",
                   "         Roo.each(_this.grid.ds.data.items, function(r,k){",
                   "            ",
                   "             if(r.data.has_selected) { rowIndex = k; }",
                   "         });",
                   "      ",
                   "         if(rowIndex < 0){",
                   "         ",
                   "             if(_this.cform.findField('id').getValue() > 0){",
                   "                 Pman.Dialog.CrmOffice.show( {",
                   "                         id : 0, ",
                   "                         company_id : _this.cform.findField('id').getValue(),",
                   "                         phone : _this.data.phone",
                   "                         ",
                   "                     } , function(data) {",
                   "                     _this.form.findField('office_id').setValue(data.id);",
                   "                     _this.grid.ds.load({});",
                   "                 }); ",
                   "                 return;",
                   "             }else{",
                   "                 Roo.MessageBox.alert('Error', 'Please add/select a company first');",
                   "                 return;",
                   "             }",
                   "             ",
                   "              ",
                   "         }",
                   "         Pman.Dialog.CrmOffice.show( _this.grid.ds.getAt(rowIndex).data, function() {",
                   "            _this.grid.ds.load({});",
                   "         }); ",
                   "         ",
                   "         (function () { ",
                   "                var tp = Pman.Dialog.CrmOffice.form.findField('phone');",
                   "                if (tp.getValue().length < 1 && _this.data.phone.length > 0) {",
                   "                    tp.setValue(_this.data.phone);",
                   "                }",
                   "            }).defer(500)",
                   "         ",
                   "         ",
                   "     });",
                   "}"
                  ]
                 },
                 "name" : "office_phone",
                 "readOnly" : true,
                 "width" : 100,
                 "xtype" : "TextField"
                },
                {
                 "$ xns" : "Roo.form",
                 "hideLabels" : true,
                 "items" : [
                  {
                   "$ xns" : "Roo.form",
                   "allowBlank" : true,
                   "name" : "ext",
                   "width" : 50,
                   "xtype" : "TextField"
                  }
                 ],
                 "width" : 50,
                 "xtype" : "Column"
                }
               ],
               "labelWidth" : 80,
               "width" : 420,
               "xtype" : "Row"
              },
              {
               "$ xns" : "Roo.form",
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "items" : [
                  {
                   "$ xns" : "Roo.form",
                   "allowBlank" : true,
                   "fieldLabel" : "Mobile",
                   "name" : "phone_mobile",
                   "width" : 100,
                   "xtype" : "TextField"
                  }
                 ],
                 "labelWidth" : 80,
                 "xtype" : "Column"
                }
               ],
               "xtype" : "Row"
              },
              {
               "$ xns" : "Roo.form",
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "items" : [
                  {
                   "$ xns" : "Roo.form",
                   "allowBlank" : true,
                   "fieldLabel" : "Direct Line",
                   "name" : "phone_direct",
                   "width" : 100,
                   "xtype" : "TextField"
                  }
                 ],
                 "labelWidth" : 80,
                 "xtype" : "Column"
                }
               ],
               "xtype" : "Row"
              }
             ],
             "legend" : "Phone numbers",
             "xtype" : "FieldSet"
            },
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "allowBlank" : true,
                 "alwaysQuery" : true,
                 "bool editable" : false,
                 "displayField" : "name",
                 "emptyText" : "Select Owner",
                 "fieldLabel" : "Owner of this record",
                 "forceSelection" : true,
                 "hiddenName" : "owner_id",
                 "items" : [
                  {
                   "$ sortInfo" : "{ direction : 'ASC', field: 'name' }",
                   "$ xns" : "Roo.data",
                   "* prop" : "store",
                   "items" : [
                    {
                     "$ url" : "baseURL + '/Roo/core_person'",
                     "$ xns" : "Roo.data",
                     "* prop" : "proxy",
                     "method" : "GET",
                     "xtype" : "HttpProxy"
                    },
                    {
                     "$ xns" : "Roo.data",
                     "* prop" : "reader",
                     "id" : "id",
                     "root" : "data",
                     "totalProperty" : "total",
                     "xtype" : "JsonReader"
                    }
                   ],
                   "listeners" : {
                    "load" : [
                     "function (_self, records, options)",
                     "{",
                     "    var ownerRecord = false;",
                     "    Roo.each(records, function(r, i)  {",
                     "        if(r.id == Pman.Login.authUserId) {",
                     "            ownerRecord = r;",
                     "        }",
                     "    });",
                     "    ",
                     "    if(ownerRecord !== false) {",
                     "        _self.remove(ownerRecord);",
                     "        _self.insert(0, ownerRecord);",
                     "        ownerRecord.set('name', 'Me: ' + ownerRecord.get('name'));",
                     "    }",
                     "    ",
                     "}"
                    ],
                    "|beforeload" : [
                     "function (_self, o){",
                     "    o.params = o.params || {};",
                     "    // set more here",
                     "    o.params['query[is_owner]'] = 1;",
                     "    o.params.active  = 1;",
                     "    o.params['_can_own_contacts'] = 1;",
                     "}",
                     ""
                    ]
                   },
                   "remoteSort" : true,
                   "xtype" : "Store"
                  }
                 ],
                 "listWidth" : 400,
                 "loadingText" : "Searching...",
                 "minChars" : 1,
                 "name" : "owner_id_name",
                 "pageSize" : 20,
                 "qtip" : "Who owns this record",
                 "queryParam" : "search[name]",
                 "selectOnFocus" : true,
                 "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{name}</b> {email}</div>",
                 "triggerAction" : "all",
                 "typeAhead" : false,
                 "valueField" : "id",
                 "width" : 200,
                 "xtype" : "ComboBox"
                }
               ],
               "labelWidth" : 140,
               "width" : 420,
               "xtype" : "Row"
              }
             ],
             "legend" : "Ownership",
             "listeners" : {
              "render" : [
               "function (_self)",
               "{",
               "    _this.ownerSet = this;",
               "}"
              ]
             },
             "xtype" : "FieldSet"
            },
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "actionMode" : "fieldEl",
               "fieldLabel" : "First Meeting Notes",
               "height" : 100,
               "hideMode" : "display",
               "name" : "meeting_notes",
               "width" : 430,
               "xtype" : "TextArea"
              }
             ],
             "labelAlign" : "top",
             "width" : 420,
             "xtype" : "Row"
            },
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "fieldLabel" : "Key Reference Notes",
               "height" : 100,
               "name" : "remarks",
               "width" : 430,
               "xtype" : "TextArea"
              }
             ],
             "labelAlign" : "top",
             "width" : 420,
             "xtype" : "Row"
            },
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "Number labelWidth" : 25,
                 "Number/String width" : 50,
                 "items" : [
                  {
                   "$ xns" : "Roo.form",
                   "String fieldLabel" : "Fails",
                   "String name" : "email_fails",
                   "xtype" : "DisplayField"
                  }
                 ],
                 "xtype" : "Column"
                },
                {
                 "$ xns" : "Roo.form",
                 "Number labelWidth" : 0,
                 "Number/String width" : 70,
                 "items" : [
                  {
                   "$ xns" : "Roo",
                   "String text" : "reset",
                   "listeners" : {
                    "click" : [
                     "function (_self, e)",
                     "{",
                     "    _this.form.findField('email_fails').setValue(0);",
                     "}"
                    ]
                   },
                   "xtype" : "Button"
                  }
                 ],
                 "xtype" : "Column"
                }
               ],
               "labelWidth" : 140,
               "width" : 420,
               "xtype" : "Row"
              },
              {
               "$ xns" : "Roo.form",
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "Number labelWidth" : 120,
                 "Number/String width" : 250,
                 "items" : [
                  {
                   "$ Function valueRenderer" : [
                    "function()",
                    "{",
                    "    if(!_this.form) {",
                    "        return '';",
                    "    }",
                    "    ",
                    "    var no_mx_dt = _this.form.findField('domain_id_no_mx_dt').value;",
                    "    ",
                    "    var ret = no_mx_dt instanceof Date ? no_mx_dt.format('Y-m-d H:i:s') : no_mx_dt;",
                    "    ",
                    "    if(ret == '1000-01-01 00:00:00') {",
                    "        return 'N/A'",
                    "    }",
                    "    ",
                    "    return String.format(\"<span style='color:red;'>{0}</span>\", ret);",
                    "}"
                   ],
                   "$ xns" : "Roo.form",
                   "Number width" : 130,
                   "String fieldLabel" : "No mx records since",
                   "String name" : "domain_id_no_mx_dt",
                   "xtype" : "DisplayField"
                  }
                 ],
                 "xtype" : "Column"
                },
                {
                 "$ xns" : "Roo.form",
                 "Number/String width" : 100,
                 "items" : [
                  {
                   "$ xns" : "Roo",
                   "String text" : "update MX",
                   "listeners" : {
                    "click" : [
                     "function (_self, e)",
                     "{",
                     "    var id = _this.data.domain_id;",
                     "    ",
                     "    if(!(id * 1)) {",
                     "        Roo.MessageBox.alert('Error', 'No domain_id');",
                     "        return;",
                     "    }",
                     "    ",
                     "    new Pman.Request({",
                     "       url : baseURL + '/Roo/core_domain.php',",
                     "       method : 'POST',",
                     "       mask: \"Updating\",",
                     "       params : {",
                     "           id : id,",
                     "           _update_mx : 1",
                     "       }, ",
                     "       success : function(res) {",
                     "            if(_this.data.id){",
                     "                _this.form.load({ method: 'GET', params: { '_id' : _this.data.id }});",
                     "            }",
                     "       }",
                     "   });",
                     "}"
                    ]
                   },
                   "xtype" : "Button"
                  }
                 ],
                 "xtype" : "Column"
                }
               ],
               "listeners" : {
                "render" : [
                 "function (_self)",
                 "{",
                 "    _this.noMxRow = _self;",
                 "}"
                ]
               },
               "xtype" : "Row"
              }
             ],
             "legend" : "Contact Status",
             "xtype" : "FieldSet"
            },
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "fieldLabel" : "Is Spammer",
                 "name" : "email_is_spam",
                 "width" : 150,
                 "xtype" : "Checkbox"
                }
               ],
               "labelWidth" : 75,
               "width" : 100,
               "xtype" : "Row"
              }
             ],
             "legend" : "Spam Status",
             "xtype" : "FieldSet"
            },
            {
             "$ xns" : "Roo.form",
             "name" : "company_id",
             "xtype" : "Hidden"
            },
            {
             "$ xns" : "Roo.form",
             "name" : "meeting_notes_id",
             "xtype" : "Hidden"
            },
            {
             "$ xns" : "Roo.form",
             "name" : "enquiry_id",
             "xtype" : "Hidden"
            },
            {
             "$ xns" : "Roo.form",
             "name" : "phone",
             "xtype" : "Hidden"
            },
            {
             "$ xns" : "Roo.form",
             "name" : "office_id",
             "xtype" : "Hidden"
            },
            {
             "$ xns" : "Roo.form",
             "name" : "id",
             "xtype" : "Hidden"
            }
           ],
           "labelAlign" : "right",
           "labelWidth" : 120,
           "listeners" : {
            "actionfailed" : [
             "function (_self, action)",
             "{",
             "    _this.dialog.el.unmask();",
             "    if(action.failureType == 'server'){",
             "        if(action.result.code == 'NOTICE-DUPLICATE-EMAIL-UNASSIGNED') {",
             "            Roo.Msg.show({",
             "                title: 'Warning',",
             "                msg: action.result.errorMsg,",
             "                buttons: {yes: true, no: true},",
             "                fn: function(res) {",
             "                    if(res == 'yes') {",
             "                        new Pman.Request({",
             "                            url : baseURL + '/Roo/Crm_person.php',",
             "                            method : 'POST',",
             "                            params : {",
             "                              id : action.result.errors.person_id,",
             "                              owner_id : Pman.Login.authUser.id",
             "                            }, ",
             "                            success : function(res) {",
             "                                _this.form.load({ method: 'GET', params: { '_id' : action.result.errors.person_id, '_notes' : 1}});",
             "                            }",
             "                        });",
             "                        return;",
             "                    }",
             "                }",
             "            });",
             "            return;",
             "        }",
             "        Roo.MessageBox.alert('Error', action.result.errorMsg);",
             "        return;",
             "    }",
             "    Roo.MessageBox.alert('Error', 'fix all the errors in red');",
             "}"
            ],
            "|actioncomplete" : [
             "function(_self,action)",
             "{",
             "    if (action.type == 'setdata') {",
             "        _this.dialog.layout.showPanel(0);",
             "        ",
             "        this.findField('meeting_notes').hide();",
             "        _this.form.findField('crm_is_private').actionMode = 'fieldEl';",
             "        _this.form.findField('crm_is_private').show();",
             "        _this.noMxRow.hide();",
             "",
             "       if(_this.data.id > 0){",
             "            if(_this.data.owner_id != Pman.Login.authUserId){",
             "                _this.form.findField('crm_is_private').hide();",
             "            }",
             "           this.load({ method: 'GET', params: { '_id' : _this.data.id, '_notes' : 1, '_with_enquiry': 1}});",
             "       }else{",
             "            this.findField('meeting_notes').show();",
             "",
             "            if(_this.form.findField('company_id').getValue() > 0){",
             "                _this.cform.fireEvent('actioncomplete', _this.form,  { type: 'setdata', data: {company_id : _this.form.findField('company_id').getValue()} });",
             "            }",
             "            if (typeof(_this.data._show_project) != 'undefined') {",
             "                _this.project.show();",
             "            }",
             "       }",
             "       _this.ownerSet.hide();",
             "       return;",
             "    }",
             "    ",
             "    if (action.type == 'load') {",
             "        _this.dialog.el.unmask();",
             "        _this.data = action.result.data;",
             "        if(",
             "            // unassigned contacts",
             "            !(_this.data.owner_id * 1) &&",
             "            // cannot edit if the staff doesn't have the edit permission 'Crm.View_Unassigned_Contacts'",
             "            !Pman.hasPerm('Crm.View_Unassigned_Contacts', 'E')",
             "            ||",
             "            // current staff's contacts",
             "            _this.data.owner_id * 1 && _this.data.owner_id != Pman.Login.authUser.id && _this.data.owner_id_active * 1 && ",
             "            // cannot edit if the staff doesn't have the edit permission 'Crm.View_Other_Contacts'",
             "            !Pman.hasPerm('Crm.View_Other_Contacts', 'E')",
             "            ||",
             "            // old staff's contacts",
             "            _this.data.owner_id * 1 && _this.data.owner_id != Pman.Login.authUser.id && !(_this.data.owner_id_active * 1) &&",
             "            // cannot edit if the staff has none of the edit permissions ('Crm.View_Other_Contacts' or 'Crm.View_Unassigned_Contacts')",
             "            !Pman.hasPerm('Crm.View_Unassigned_Contacts', 'E') && !Pman.hasPerm('Crm.View_Other_Contacts', 'E')",
             "        ) {",
             "            // hide",
             "            _this.dialog.el.unmask();",
             "            _this.dialog.hide();",
             "            _this.grid.ds.removeAll();",
             "            _this.form.reset();",
             "            _this.cform.reset();",
             "            if (_this.callback) {",
             "                _this.callback.call(_this, action.result.data);",
             "            }",
             "            Roo.MessageBox.alert('Error', \"You don't have the permission to edit this contact\");",
             "            return;",
             "        }",
             "        _this.ownerSet.hide();",
             "        // if owner is not active or changeowner perm",
             "        if (_this.data.owner_id_active * 1 < 1 || Pman.hasPerm('Crm.ChangeOwner','S')) {",
             "            _this.ownerSet.show();",
             "        }",
             "        if (_this.data.owner_id_active * 1 < 1) {",
             "            (function() {Roo.MessageBox.alert(\"Notice\", ",
             "                \"The Current Owner of this record is no longer active, you should change the ownership before Saving\"",
             "            );}).defer(1000);",
             "        }",
             "        ",
             "        ",
             "        _this.form.validEmail();",
             "        ",
             "        if(_this.form.findField('company_id').getValue() > 0){",
             "            _this.cform.fireEvent('actioncomplete', _this.form,  { type: 'setdata', data: {company_id : action.result.data.company_id} });",
             "        }",
             "        ",
             "        if(typeof(_this.data.crm_location_covered_name) != 'undefined'){",
             "            var c =Roo.decode(_this.data.crm_location_covered_name);",
             "            _this.form.findField('crm_location_covered').setValue(c);",
             "        }",
             "        ",
             "        if(action.result.data){",
             "            var data = action.result.data;",
             "        ",
             "            var pAry = action.result.data.phone.split(\"+\");",
             "            if(pAry.length < 1){",
             "                return;",
             "            }",
             "            _this.form.findField('office_phone').setValue(pAry[0]);",
             "            Roo.log(pAry);",
             "            if(pAry.length > 1){",
             "                _this.form.findField('ext').setValue(pAry[1]);",
             "            }",
             "            // fill in the name if not set..",
             "            if (!data.firstname.length && !data.lastname.length && data.name.length) {",
             "                var ar = data.name.split(/\\s+/);",
             "                _this.form.findField('firstname').setValue(ar.shift());",
             "                _this.form.findField('lastname').setValue(ar.join(' '));",
             "            }",
             "            ",
             "            ",
             "            /*",
             "            ",
             "            _this.form.findField('office_phone').el.on('click', function(){",
             "                var rowIndex = null;",
             "                Roo.each(_this.grid.ds.data.items, function(r,k){",
             "                    Roo.log(r);",
             "                    if(r.data.has_selected) rowIndex = k;",
             "                });",
             "                Roo.log('index?');",
             "                Roo.log(rowIndex);",
             "                if(rowIndex === null){",
             "                    Roo.MessageBox.alert('', 'Please select an office');",
             "                }",
             "                Pman.Dialog.CrmOffice.show( _this.grid.ds.getAt(rowIndex).data, function() {",
             "                   _this.grid.ds.load({});",
             "                }); ",
             "            });",
             "            */",
             "        }",
             "        ",
             "        _this.form.findField('lang').setFromData({",
             "            code: _this.data.lang,",
             "            title: Pman.I18n.toName('l', _this.data.lang)",
             "        });",
             "        ",
             "        var no_mx_dt = _this.form.findField('domain_id_no_mx_dt').value;",
             "        ",
             "        var ret = no_mx_dt instanceof Date ? no_mx_dt.format('Y-m-d H:i:s') : no_mx_dt;",
             "        ",
             "        if(ret !== '1000-01-01 00:00:00') {",
             "            _this.noMxRow.show();",
             "        }",
             "        ",
             "        return;",
             "    }",
             "    if (action.type =='submit') {",
             "        // it's a contact with enquiry",
             "        if(_this.form.findField('enquiry_id').getValue() * 1) {",
             "            var enquiryId = _this.form.findField('enquiry_id').getValue() * 1;",
             "            Roo.MessageBox.show({",
             "                title: \"Follow up\",",
             "                msg: \"Do the sales staff need to follow up on it?\",",
             "                buttons : {yes: \"Yes\", no: \"No\"},",
             "                fn : function(r) {",
             "                    // reset contact_again_notify_id",
             "                    new Pman.Request({",
             "                        method: 'POST',",
             "                        url: baseURL + '/Roo/Crm_action',",
             "                        mask: 'Clearing enquiries',",
             "                        params: {",
             "                            _clear_person_enquiry: action.result.data.id,",
             "                            notes: 'Assigned to ' + action.result.data.owner_id_name",
             "                        },",
             "                        success: function() {",
             "                            // need follow up",
             "                            if (r == 'yes') {",
             "                                // add a first meeting notes",
             "                                // assigned to the owner",
             "                                var param = {",
             "                                    person_id : action.result.data.id,",
             "                                    action_type_id_name: 'FIRSTMEETING',",
             "                                    company_id: action.result.data.company_id,",
             "                                    owner_id: action.result.data.owner_id,",
             "                                    owner_id_active: action.result.data.owner_id_active,",
             "                                    owner_id_name: action.result.data.owner_id_name",
             "                                };",
             "                                ",
             "                                Pman.Dialog.CrmAction.show(param , function() {",
             "                                    if (_this.callback) {",
             "                                        _this.callback.call(_this, action.result.data);",
             "                                    }",
             "                                });",
             "                            }",
             "                            // no follow up",
             "                            else {",
             "                                if (_this.callback) {",
             "                                    _this.callback.call(_this, action.result.data);",
             "                                }",
             "                            }",
             "                        }",
             "                    });",
             "                }",
             "                ",
             "            });",
             "        }",
             "        else {",
             "            if (_this.callback) {",
             "                _this.callback.call(_this, action.result.data);",
             "             }",
             "        }",
             "        _this.dialog.el.unmask();",
             "        _this.dialog.hide();",
             "        _this.grid.ds.removeAll();",
             "        _this.form.reset();",
             "        _this.cform.reset();",
             "        return;",
             "    }",
             "}",
             ""
            ],
            "|rendered" : [
             "function (form)",
             "{",
             "    _this.form= form;",
             "    ",
             "   ",
             "    ",
             "}",
             ""
            ]
           },
           "method" : "POST",
           "style" : "margin:10px;",
           "xtype" : "Form"
          }
         ],
         "region" : "center",
         "xtype" : "ContentPanel"
        },
        {
         "$ xns" : "Roo",
         "items" : [
          {
           "$ xns" : "Roo",
           "* prop" : "layout",
           "items" : [
            {
             "$ xns" : "Roo",
             "* prop" : "north",
             "height" : 200,
             "xtype" : "LayoutRegion"
            },
            {
             "$ xns" : "Roo",
             "* prop" : "center",
             "xtype" : "LayoutRegion"
            },
            {
             "$ xns" : "Roo",
             "autoScroll" : true,
             "fitToFrame" : true,
             "items" : [
              {
               "$ xns" : "Roo",
               "* prop" : "toolbar",
               "items" : [
                {
                 "$ xns" : "Roo.Toolbar",
                 "xtype" : "Fill"
                },
                {
                 "$ icon" : "Roo.rootURL + 'images/default/tree/leaf.gif'",
                 "$ xns" : "Roo.Toolbar",
                 "cls" : "x-btn-text-icon",
                 "listeners" : {
                  "|click" : [
                   "function()",
                   "{",
                   "    var data = _this.cform.getValues();",
                   "    ",
                   "    if(data.id == 0){",
                   "        Roo.MessageBox.alert('Error', 'Please add a new company');",
                   "        return;",
                   "    }",
                   "    ",
                   "    Pman.Dialog.CrmCompany.show( { id : data.id } , function(res) {",
                   "        _this.cform.fireEvent('actioncomplete', _this.form,  { type: 'setdata', data: {company_id :  data.id} });",
                   "        _this.grid.ds.load({});",
                   "   }); ",
                   "}",
                   ""
                  ]
                 },
                 "text" : "Edit Company Details",
                 "xtype" : "Button"
                }
               ],
               "xtype" : "Toolbar"
              },
              {
               "$ url" : "baseURL + '/Roo/core_company'",
               "$ xns" : "Roo.form",
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "items" : [
                  {
                   "$ xns" : "Roo.form",
                   "allowBlank" : false,
                   "alwaysQuery" : true,
                   "displayField" : "name",
                   "editable" : true,
                   "fieldLabel" : "Company Name",
                   "forceSelection" : false,
                   "hiddenName" : "id",
                   "items" : [
                    {
                     "$ sortInfo" : "{ direction : 'ASC', field: 'name' }",
                     "$ xns" : "Roo.data",
                     "* prop" : "store",
                     "items" : [
                      {
                       "$ url" : "baseURL + '/Roo/core_company'",
                       "$ xns" : "Roo.data",
                       "* prop" : "proxy",
                       "method" : "GET",
                       "xtype" : "HttpProxy"
                      },
                      {
                       "$ xns" : "Roo.data",
                       "* prop" : "reader",
                       "id" : "id",
                       "root" : "data",
                       "totalProperty" : "total",
                       "xtype" : "JsonReader"
                      }
                     ],
                     "listeners" : {
                      "load" : [
                       "function (_self, records, options)",
                       "{",
                       "    if(records.length == 0){ // set value to empty",
                       "        ",
                       "        _this.cform.findField('id').value = 0;",
                       "        _this.cform.findField('id').hiddenField.value = 0;",
                       "        ",
                       "        _this.cform.findField('url').setValue('');",
                       "        _this.cform.findField('comptype_id_display_name').setValue('');",
                       "        _this.cform.findField('crm_industry_id_display_name').setValue('');",
                       "        _this.cform.findField('crm_business_focus').setValue('');",
                       "        _this.cform.findField('crm_client_of_competitor').setValue('');",
                       "      //  _this.cform.findField('comptype_id').setValue('');",
                       "       // _this.cform.findField('crm_industry_id').setValue('');",
                       "      //  _this.cform.findField('url').el.dom.readOnly = false;",
                       "      //  _this.cform.findField('comptype_id').enable();",
                       "     //   _this.cform.findField('crm_industry_id').enable();",
                       "    }",
                       "}"
                      ],
                      "|beforeload" : [
                       "function (_self, o){",
                       "    o.params = o.params || {};",
                       "    // set more here",
                       "    //o.params.etype = 'COMPTYPE';",
                       "    ",
                       "}",
                       ""
                      ]
                     },
                     "remoteSort" : true,
                     "xtype" : "Store"
                    }
                   ],
                   "listWidth" : 400,
                   "listeners" : {
                    "add" : [
                     "function (combo)",
                     "{  ",
                     "   Pman.Dialog.CrmCompany.show( { id : 0 } , function(res) {",
                     "        Roo.log(res);",
                     "        _this.cform.fireEvent('actioncomplete', _this.cform,  { type: 'setdata', data: { company_id: res.id} });",
                     "        //_this.cform.setValues(res.id);",
                     "",
                     "        _this.form.setValues({ company_id : res.id, office_id : 0 });",
                     "        _this.grid.ds.load({});",
                     "        //_this.grid.footer.onClick('first');",
                     "   });",
                     "}"
                    ],
                    "select" : [
                     "function (combo, record, index)",
                     "{",
                     "    //reset the value",
                     "    ",
                     "    _this.cform.setValues(record.data);",
                     "    if (_this.form.findField('company_id').getValue()*1 == record.data.id*1) {",
                     "        return;",
                     "    }",
                     "",
                     "    _this.form.setValues({ company_id : record.data.id, office_id :  0});",
                     "",
                     "    _this.grid.ds.load({});",
                     "}"
                    ]
                   },
                   "loadingText" : "Searching...",
                   "minChars" : 1,
                   "name" : "name",
                   "pageSize" : 20,
                   "qtip" : "Select core_enum",
                   "queryParam" : "_name",
                   "selectOnFocus" : true,
                   "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{name}</b> </div>",
                   "triggerAction" : "all",
                   "typeAhead" : true,
                   "valueField" : "id",
                   "width" : 200,
                   "xtype" : "ComboBox"
                  },
                  {
                   "$ xns" : "Roo.form",
                   "fieldLabel" : "Website",
                   "name" : "url",
                   "value" : " ",
                   "vtype" : "url",
                   "width" : 200,
                   "xtype" : "DisplayField"
                  },
                  {
                   "$ xns" : "Roo.form",
                   "fieldLabel" : "Company Type",
                   "name" : "comptype_id_display_name",
                   "value" : " ",
                   "vtype" : "url",
                   "width" : 200,
                   "xtype" : "DisplayField"
                  },
                  {
                   "$ xns" : "Roo.form",
                   "fieldLabel" : "Industry",
                   "name" : "crm_industry_id_display_name",
                   "value" : " ",
                   "vtype" : "url",
                   "width" : 200,
                   "xtype" : "DisplayField"
                  },
                  {
                   "$ xns" : "Roo.form",
                   "fieldLabel" : "Business Focus",
                   "name" : "crm_business_focus",
                   "value" : " ",
                   "vtype" : "url",
                   "width" : 200,
                   "xtype" : "DisplayField"
                  },
                  {
                   "$ xns" : "Roo.form",
                   "Mixed value" : "",
                   "Number width" : 200,
                   "String fieldLabel" : "Client of",
                   "String name" : "crm_client_of_competitor",
                   "String vtype" : "url",
                   "xtype" : "DisplayField"
                  },
                  {
                   "$ xns" : "Roo.form",
                   "name" : "crm_industry_id",
                   "xtype" : "Hidden"
                  }
                 ],
                 "labelAlign" : "right",
                 "labelWidth" : 100,
                 "xtype" : "Row"
                }
               ],
               "labelAlign" : "right",
               "labelWidth" : 100,
               "listeners" : {
                "actionfailed" : [
                 "function (_self, action)",
                 "{",
                 "    _this.dialog.el.unmask();",
                 "    Roo.MessageBox.alert('Error', 'fix all the errors in red');",
                 "}"
                ],
                "|actioncomplete" : [
                 "function(_self,action)",
                 "{",
                 "    if (action.type == 'setdata') {",
                 "       if(action.data.company_id > 0) {",
                 "           this.load({ method: 'GET', params: { '_id' : action.data.company_id }});",
                 "        }",
                 "       return;",
                 "    }",
                 "    if (action.type == 'load') {",
                 "        if(_this.grid) { _this.grid.ds.load({}); }",
                 "        return;",
                 "    }",
                 "    if (action.type =='submit') {",
                 "    /*",
                 "        ",
                 "        if(action.result.data.id > 0){",
                 "            //_this.form.fireEvent('actioncomplete', {},  { type: 'setdata', data: {} });",
                 "            //_this.cform.setValues(action.result.data);",
                 "            _this.form.doAction(\"submit\");",
                 "        }",
                 "        _this.dialog.hide();",
                 "    ",
                 "         if (_this.callback) {",
                 "            _this.callback.call(_this, _this.form.getValues());",
                 "         }",
                 "         _this.form.reset();",
                 "         _this.cform.reset();",
                 "         */",
                 "         return;",
                 "    }",
                 "}",
                 ""
                ],
                "|rendered" : [
                 "function (form)",
                 "{",
                 "    _this.cform = form;",
                 "}",
                 ""
                ]
               },
               "method" : "POST",
               "style" : "margin:10px;",
               "xtype" : "Form"
              }
             ],
             "region" : "north",
             "xtype" : "ContentPanel"
            },
            {
             "$ xns" : "Roo",
             "background" : false,
             "fitContainer" : true,
             "fitToframe" : true,
             "items" : [
              {
               "$ xns" : "Roo.grid",
               "* prop" : "grid",
               "autoExpandColumn" : "address",
               "items" : [
                {
                 "$ xns" : "Roo",
                 "* prop" : "toolbar",
                 "items" : [
                  {
                   "$ icon" : "Roo.rootURL + 'images/default/dd/drop-add.gif'",
                   "$ xns" : "Roo.Toolbar",
                   "cls" : "x-btn-text-icon",
                   "listeners" : {
                    "|click" : [
                     "function()",
                     "{",
                     "    if(_this.cform.findField('id').getValue() > 0){",
                     "    ",
                     "        var def = {                ",
                     "            id : 0, ",
                     "            company_id : _this.cform.findField('id').getValue()",
                     "        };",
                     "        if (_this.form.findField('office_id').getValue()*1 < 1) {",
                     "            def.phone = _this.data.phone;",
                     "        }",
                     "    ",
                     "        Pman.Dialog.CrmOffice.show( def , function(data) {",
                     "            _this.form.findField('office_id').setValue(data.id);",
                     "            _this.grid.ds.load({});",
                     "        }); ",
                     "    }else{",
                     "        Roo.MessageBox.alert('Error', 'Please add/select a company first');",
                     "    }",
                     "}",
                     ""
                    ]
                   },
                   "text" : "Add Office",
                   "xtype" : "Button"
                  },
                  {
                   "$ xns" : "Roo.Toolbar",
                   "xtype" : "Fill"
                  },
                  {
                   "$ icon" : "rootURL + '/Pman/templates/images/trash.gif'",
                   "$ xns" : "Roo.Toolbar",
                   "cls" : "x-btn-text-icon",
                   "listeners" : {
                    "|click" : [
                     "function()",
                     "{",
                     "    Pman.genericDelete(_this, 'core_office'); ",
                     "   ",
                     "}"
                    ]
                   },
                   "text" : "Delete Office",
                   "xtype" : "Button"
                  }
                 ],
                 "xtype" : "Toolbar"
                },
                {
                 "$ sortInfo" : "{ field : 'name', direction: 'ASC' }",
                 "$ xns" : "Roo.data",
                 "* prop" : "dataSource",
                 "items" : [
                  {
                   "$ url" : "baseURL + '/Roo/core_office'",
                   "$ xns" : "Roo.data",
                   "* prop" : "proxy",
                   "method" : "GET",
                   "xtype" : "HttpProxy"
                  },
                  {
                   "$ fields" : [
                    "[",
                    "    {",
                    "        'name': 'id',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'name',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'address',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'phone',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'fax',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'email',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'role',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'sales_staff_no',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'support_staff_no',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'location_id',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_id',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_code',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_name',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_remarks',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_owner_id',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_address',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_tel',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_fax',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_email',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_logo_id',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_background_color',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_comptype',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_ownership_type_id',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_url',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_main_office_id',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_created_by',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_created_dt',",
                    "        'type': 'date'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_modified_by',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_modified_dt',",
                    "        'type': 'date'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_partner_type_id',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_yr',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_yr_desc',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_est_turnover_m',",
                    "        'type': 'float'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_est_profit_m',",
                    "        'type': 'float'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_est_principle_m',",
                    "        'type': 'float'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_est_product_m',",
                    "        'type': 'float'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_est_services_m',",
                    "        'type': 'float'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_ownership_notes',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_private_notes',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_established',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'ris_company_id_staff_no',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'location_id_id',",
                    "        'type': 'int'",
                    "    },",
                    "    {",
                    "        'name': 'location_id_name',",
                    "        'type': 'string'",
                    "    },",
                    "    {",
                    "        'name': 'location_id_country',",
                    "        'type': 'string'",
                    "    }",
                    "]"
                   ],
                   "$ xns" : "Roo.data",
                   "* prop" : "reader",
                   "id" : "id",
                   "root" : "data",
                   "totalProperty" : "total",
                   "xtype" : "JsonReader"
                  }
                 ],
                 "listeners" : {
                  "beforeload" : [
                   "function (_self, o)",
                   "{",
                   "    o.params = o.params || {};",
                   "    if(_this.cform.findField('id').getValue()){",
                   "        o.params.company_id = _this.cform.findField('id').getValue();",
                   "    }else{",
                   "        return false;",
                   "    }",
                   "    ",
                   "}"
                  ],
                  "load" : [
                   "function (_self, records, options)",
                   "{",
                   "    // if any of them are selected - then we update the phone number..",
                   "    ",
                   "    ",
                   "    var co = _this.form.findField('office_id').getValue() *1;",
                   "    Roo.each(records, function(r) {",
                   "    ",
                   "        if (!co) {",
                   "            co = r.data.id;",
                   "            _this.form.findField('office_id').setValue(co);",
                   "            r.set('has_selected',1);",
                   "            if (r.data.phone.length > 0) {",
                   "                _this.form.findField('office_phone').setValue(r.data.phone); ",
                   "            }",
                   "            return;",
                   "        }",
                   "    ",
                   "        if (r.data.id *1 != co) {",
                   "            return;",
                   "        }",
                   "        // found the office - update the phone number.",
                   "        ",
                   "        if (r.data.phone.length > 0) {",
                   "            _this.form.findField('office_phone').setValue(r.data.phone);",
                   "        }",
                   "",
                   "    });",
                   "    ",
                   "}"
                  ]
                 },
                 "remoteSort" : true,
                 "xtype" : "Store"
                },
                {
                 "$ renderer" : [
                  "function(v,x,r)",
                  "{",
                  "    var id = _this.form.findField('office_id').getValue();",
                  "    var state = '';",
                  "",
                  "    if(id > 0 && id == r.data.id){",
                  "        state = '-checked';",
                  "        r.data.has_selected = 1;",
                  "    }else{",
                  "        r.data.has_selected = 0;",
                  "    }",
                  "    return '<img class=\"x-grid-check-icon' + state + '\" src=\"' + Roo.BLANK_IMAGE_URL + '\"/>';",
                  "}"
                 ],
                 "$ xns" : "Roo.grid",
                 "* prop" : "colModel[]",
                 "dataIndex" : "has_selected",
                 "header" : "Select?",
                 "width" : 50,
                 "xtype" : "ColumnModel"
                },
                {
                 "$ renderer" : [
                  "function(v,x,r)",
                  "{",
                  " ",
                  "   return  [v,  ",
                  "        r.data.address2 ,",
                  "         r.data.address3, ",
                  "         r.data.office_id_country_name,",
                  "        r.data.phone && r.data.phone.length ? ( \"Tel: \" + r.data.phone) : '', ",
                  "        r.data.fax && r.data.fax.length ? ( \"Fax: \" + r.data.fax) : ''",
                  "        ].filter(",
                  "                function(vv) { return vv && vv.length }",
                  "            ).map(",
                  "                function(vv) { return String.format('{0}', vv) }",
                  "            ).join('<br/>');",
                  "     ",
                  "     ",
                  "     ",
                  " /*",
                  "    return String.format('{0}<br/>{1}<br/>{2}<br/>{3}<br/>Tel: {4}<br/>Fax: {5}', ",
                  "        v,  r.data.address2 , r.data.address3, r.data.office_id_country_name,",
                  "        r.data.phone, r.data.fax).replace(",
                  "                /\\<br\\/\\>(\\<br\\/\\>)+/g,'<br/>'",
                  "            ).replace(",
                  "             /^\\<br\\/\\>/g, ''",
                  "             ).replace(",
                  "             ;",
                  "             */",
                  "}"
                 ],
                 "$ xns" : "Roo.grid",
                 "* prop" : "colModel[]",
                 "dataIndex" : "address",
                 "header" : "Address",
                 "width" : 220,
                 "xtype" : "ColumnModel"
                }
               ],
               "listeners" : {
                "cellclick" : [
                 "function (_self, rowIndex, colIndex, e)",
                 "{",
                 "",
                 "    if (colIndex != 0) {",
                 "        return;",
                 "    }",
                 "    ",
                 "    var data = this.ds.data.items;",
                 "    var el = this;",
                 "    var d = this.ds.getAt(rowIndex);",
                 "",
                 "    var s = d.data.has_selected*1 ? 0 : 1;",
                 "    ",
                 "    ",
                 "    var not_s = s ? 0 : 1;",
                 "    var id = 0;",
                 "    ",
                 "    _this.form.findField('office_id').setValue((s) ? d.data.id : 0);    ",
                 "    if (d.data.phone.length > 0 ) {",
                 "//    d.set('has_selected', s);",
                 "        var pAry = d.data.phone.split(\"+\");",
                 "   ",
                 "        _this.form.findField('office_phone').setValue((pAry[0]*1 > 0 && s) ? pAry[0]*1 : '');",
                 "",
                 "        _this.form.findField('ext').setValue((pAry.length > 1 && s) ? pAry[1]*1 : '');",
                 "    }",
                 "",
                 "    this.ds.each(function(rec){",
                 "        rec.set('has_selected', rec.data.id == d.data.id ? s : not_s);",
                 "    });",
                 "",
                 "}"
                ],
                "|render" : [
                 "function() ",
                 "{",
                 "    _this.grid = this; ",
                 "    //_this.dialog = Pman.Dialog.FILL_IN",
                 "    if (_this.panel.active) {",
                 "       // (function() { _this.grid.footer.onClick('first'); }).defer(1000);",
                 "    }",
                 "}"
                ],
                "|rowdblclick" : [
                 "function (_self, rowIndex, e)",
                 "{",
                 "     var d = _this.grid.ds.getAt(rowIndex).data;",
                 "   Pman.Dialog.CrmOffice.show( d, function() {",
                 "       _this.grid.ds.load({});",
                 "    });",
                 "    ",
                 "    if (d.id != _this.data.office_id) {",
                 "        return;",
                 "    }",
                 "    ",
                 "    (function () { ",
                 "        var tp = Pman.Dialog.CrmOffice.form.findField('phone');",
                 "        if (tp.getValue().length < 1 && _this.data.phone.length > 0) {",
                 "            tp.setValue(_this.data.phone);",
                 "        }",
                 "    }).defer(500)",
                 "     ",
                 "}",
                 ""
                ]
               },
               "loadMask" : true,
               "xtype" : "Grid"
              }
             ],
             "listeners" : {
              "|activate" : [
               "function() {",
               "    _this.panel = this;",
               "    if (_this.grid) {",
               "       //(function() { _this.grid.footer.onClick('first'); }).defer(1000);",
               "    }",
               "}"
              ]
             },
             "region" : "center",
             "tableName" : "Office",
             "title" : "Office",
             "xtype" : "GridPanel"
            }
           ],
           "xtype" : "BorderLayout"
          }
         ],
         "region" : "east",
         "xtype" : "NestedLayoutPanel"
        }
       ],
       "xtype" : "BorderLayout"
      }
     ],
     "region" : "center",
     "title" : "Details",
     "xtype" : "NestedLayoutPanel"
    },
    {
     "$ xns" : "Roo",
     "autoScroll" : false,
     "fitContainer" : true,
     "fitToFrame" : true,
     "items" : [
      {
       "$ xns" : "Roo",
       "* prop" : "toolbar",
       "items" : [
        {
         "$ xns" : "Roo.Toolbar",
         "listeners" : {
          "render" : [
           "function (_self)",
           "{",
           "    _this.preview_btn = _self;",
           "}"
          ],
          "|click" : [
           "function()",
           "{",
           "    //_this.dialog.hide();",
           "    Roo.log(_this.data.module);",
           "    Pman.Dialog.CoreEmailPreview.show({ id : _this.form.findField('id').getValue(), module : _this.data.module });",
           "}",
           ""
          ]
         },
         "text" : "Preview",
         "xtype" : "Button"
        },
        {
         "$ xns" : "Roo.Toolbar",
         "listeners" : {
          "render" : [
           "function (_self)",
           "{",
           "    _this.html_preview = _self;",
           "}"
          ],
          "|click" : [
           "function()",
           "{",
           "    //_this.dialog.hide();",
           "",
           "    var id = _this.form.findField('id').getValue();",
           "    ",
           "    if(id*1 < 1){",
           "        Roo.MessageBox.alert('Error', 'Please save the message frist!');",
           "        return;",
           "    }",
           "   ",
           "    new Pman.Request({",
           "        url : baseURL + '/Core/MessagePreview',",
           "        method : 'POST',",
           "        mask: 'Sending',",
           "        params : {",
           "            _id : id,",
           "            _table : _this.data.module",
           "        }, ",
           "        success : function(res) { ",
           "            if(res.data == 'SUCCESS'){",
           "                Roo.MessageBox.alert(\"Email Sent\", 'The report was sent to your email (HTML format).');",
           "            }",
           "        }",
           "    });",
           "}",
           ""
          ]
         },
         "text" : "Send me a test copy",
         "xtype" : "Button"
        },
        {
         "$ xns" : "Roo.Toolbar",
         "String text" : "Refresh from Stripo",
         "listeners" : {
          "click" : [
           "function (_self, e)",
           "{",
           "    var deleteImages = function() {",
           "        new Pman.Request({",
           "            url: baseURL + '/Roo/crm_mailing_list_message',",
           "            method: 'POST',",
           "            params : {",
           "                _delete_images: _this.form.findField('id').getValue()",
           "            },",
           "            mask : 'loading ...'",
           "        });",
           "    };",
           "    ",
           "    var updateSubjectAndName = function() {",
           "        new Pman.Request({",
           "            url: baseURL + '/Crm/Stripo',",
           "            method: 'GET',",
           "            mask: 'loading ...',",
           "            success: function(res) {",
           "                Roo.each(res.data, function(email) {",
           "                    if(email.emailId == _this.form.findField('stripo_id').getValue()) {",
           "                        _this.form.findField('subject').setValue(email.title);",
           "                        _this.form.findField('name').setValue((new Date(email.updatedTime)).format('d M y') + ' - ' + email.title);",
           "                    }",
           "                });",
           "                deleteImages();",
           "            }",
           "        });",
           "    };",
           "    ",
           "    var updatePlainText = function(bodytext) {",
           "        new Pman.Request({",
           "            url : baseURL + '/Core/ImportMailMessage.php',",
           "            method : 'POST',",
           "            params : {",
           "              bodytext : bodytext,",
           "              _convertToPlain : true,",
           "              _check_unsubscribe : true",
           "            },",
           "            mask : 'loading ...',",
           "            success : function(res) {",
           "                if(res.success == true){",
           "                    _this.form.findField('plaintext').setValue(res.data);",
           "                    updateSubjectAndName();",
           "                }",
           "            }",
           "        }); ",
           "    };",
           "    ",
           "    var updateBodyText = function() {",
           "        new Pman.Request({",
           "            url : baseURL + '/Crm/Stripo',",
           "            method : 'GET',",
           "            params : {",
           "                emailId: _this.form.findField('stripo_id').getValue()",
           "            },",
           "            mask : 'loading ...',",
           "            success : function(res) {",
           "                _this.form.findField('bodytext').setValue(res.data);",
           "                updatePlainText(res.data);",
           "            }",
           "        });",
           "    };",
           "    ",
           "    updateBodyText();",
           "}"
          ],
          "render" : [
           "function (_self)",
           "{",
           "    _this.stripoUpdate = this;",
           "}"
          ]
         },
         "xtype" : "Button"
        },
        {
         "$ xns" : "Roo.Toolbar",
         "xtype" : "Fill"
        },
        {
         "$ xns" : "Roo.Toolbar",
         "listeners" : {
          "click" : [
           "function (_self, e)",
           "{",
           "    var el = _this.dialog.layout.getRegion('east');",
           "    if (el.visible) {",
           "        el.hide();",
           "    } else {",
           "        el.show();",
           "        el.showPanel(0);",
           "    }",
           "    ",
           "}"
          ]
         },
         "text" : "Images / Attachments >>",
         "xtype" : "Button"
        }
       ],
       "xtype" : "Toolbar"
      },
      {
       "$ xns" : "Roo",
       "* prop" : "layout",
       "items" : [
        {
         "$ xns" : "Roo",
         "* prop" : "center",
         "autoScroll" : true,
         "xtype" : "LayoutRegion"
        },
        {
         "$ xns" : "Roo",
         "autoScroll" : false,
         "background" : false,
         "fitContainer" : true,
         "fitToFrame" : true,
         "items" : [
          {
           "$ preValidate" : [
            "function(done_callback) {",
            "    var fromValues = _this.form.getValues();",
            "    _this.form.findField('from_email').setValue(typeof(Pman.Mail) == 'undefined' ? ",
            "        fromValues.from_email_text : ",
            "        fromValues.from_email_combo",
            "    );",
            "    ",
            "    Roo.MessageBox.progress(\"Uploading Images\", \"Uploading\");",
            "    ",
            "    if(!_this.form.findField('bodytext').editorcore.sourceEditMode){",
            "        _this.form.findField('bodytext').syncValue();",
            "    }else{",
            "        _this.form.findField('bodytext').pushValue();",
            "    }",
            "    ",
            "    var html = _this.form.findField('bodytext').getValue();",
            "    ",
            "    var s = Roo.get(_this.form.findField('bodytext').editorcore.doc.documentElement);",
            "    ",
            "    var ontable = (_this.data.module) ? _this.data.module : 'crm_mailing_list_message';",
            "    ",
            "    var nodes = [];",
            "    s.select('img[src]').each(function(i) {",
            "        nodes.push(i.dom);",
            "    });",
            "    var total = nodes.length;",
            "    var mkimg = function() {",
            "    ",
            "        if (!nodes.length) {",
            "              Roo.MessageBox.hide();",
            "              _this.form.findField('bodytext').syncValue();",
            "              done_callback(true);",
            "           //    _this.form.doAction(\"submit\");",
            "              return;",
            "        }",
            "        var i = nodes.pop(); ",
            "        ",
            "        var n = i.getAttribute('src').match(/(baseURL|server_baseurl)/);",
            "        ",
            "        if(n){",
            "            mkimg();",
            "            return;",
            "        }",
            "        ",
            "        n = i.getAttribute('src').match(/^http(.*)/);",
            "       ",
            "        if(!n ){",
            "            mkimg();",
            "            return;",
            "        }",
            "        ",
            "        new Pman.Request({",
            "            url : baseURL + '/Roo/Images.php',",
            "            method : 'POST',",
            "            params : {",
            "                onid : _this.form.findField('id').getValue(),",
            "                ontable : ontable ,",
            "                _remote_upload : i.src",
            "            },",
            "            success : function(res){",
            "                if(res.success == true){      ",
            "                    i.setAttribute('src', res.data);",
            "                    Roo.MessageBox.updateProgress( (total - nodes.length) / total , \"Done \" + (total - nodes.length) + '/' + total);",
            "                }",
            "                mkimg();",
            "            }",
            "        });",
            "       ",
            "    }",
            "    ",
            "    if (!_this.form.findField('bodytext').getValue().match(/unsubscribe/i)) {",
            "        Roo.MessageBox.confirm(\"Missing unusubscribe\",",
            "            \"There is no unsubscribe link on the email  are you sure you want to save it\",",
            "            function(res) {",
            "                if (res == 'no') {",
            "                    return;",
            "                }",
            "                mkimg();",
            "            }",
            "        );",
            "",
            "        return;",
            "    }",
            "    ",
            "    mkimg();",
            "}",
            ""
           ],
           "$ url" : "baseURL + '/Roo/crm_mailing_list_message.php'",
           "$ xns" : "Roo.form",
           "items" : [
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "allowBlank" : false,
               "fieldLabel" : "Mailout Name",
               "name" : "name",
               "width" : 400,
               "xtype" : "TextField"
              },
              {
               "$ xns" : "Roo.form",
               "Number labelWidth" : 0,
               "String labelSeparator" : " ",
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "Boolean checked" : true,
                 "Mixed value" : 1,
                 "String boxLabel" : "Enabled - will be sent out",
                 "String name" : "active",
                 "String valueOff" : 0,
                 "listeners" : {
                  "check" : [
                   "function (_self, checked)",
                   "{",
                   "    var boxLabel = 'Enabled - will be sent out';",
                   "    ",
                   "    if(!checked){",
                   "        boxLabel = 'Disabled - will NOT be sent out';",
                   "    }",
                   "    ",
                   "    this.setBoxLabel(boxLabel);",
                   "}"
                  ]
                 },
                 "xtype" : "Checkbox"
                }
               ],
               "xtype" : "Column"
              }
             ],
             "xtype" : "Row"
            },
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "allowBlank" : false,
               "fieldLabel" : "From",
               "name" : "from_name",
               "width" : 300,
               "xtype" : "TextField"
              },
              {
               "$ xns" : "Roo.form",
               "String actionMode" : "fieldEl",
               "allowBlank" : true,
               "fieldLabel" : "Email address",
               "listeners" : {
                "render" : [
                 "function (_self)",
                 "{",
                 "    if(typeof(Pman.Mail) != 'undefined') {",
                 "        _self.hide();",
                 "    }",
                 "}"
                ]
               },
               "name" : "from_email_text",
               "width" : 300,
               "xtype" : "TextField"
              },
              {
               "$ xns" : "Roo.form",
               "String queryParam" : "search[email]",
               "allowBlank" : true,
               "alwaysQuery" : true,
               "bool editable" : true,
               "displayField" : "email",
               "emptyText" : "Select email",
               "fieldLabel" : "Email address",
               "forceSelection" : true,
               "items" : [
                {
                 "$ sortInfo" : "{ direction : 'ASC', field: 'email' }",
                 "$ xns" : "Roo.data",
                 "* prop" : "store",
                 "items" : [
                  {
                   "$ url" : "baseURL + '/Roo/mail_imap_user'",
                   "$ xns" : "Roo.data",
                   "* prop" : "proxy",
                   "method" : "GET",
                   "xtype" : "HttpProxy"
                  },
                  {
                   "$ xns" : "Roo.data",
                   "* prop" : "reader",
                   "id" : "id",
                   "root" : "data",
                   "totalProperty" : "total",
                   "xtype" : "JsonReader"
                  }
                 ],
                 "listeners" : {
                  "|beforeload" : [
                   "function (_self, o){",
                   "    o.params = o.params || {};",
                   "    o.params._email_senders = 1;",
                   "   o.params['_multisort'] = JSON.stringify(",
                   "       { sort : { 'is_public' : 'DESC', 'name': 'ASC' }, order : [ 'is_public', 'name' ]}",
                   "   );",
                   "}",
                   ""
                  ]
                 },
                 "remoteSort" : true,
                 "xtype" : "Store"
                }
               ],
               "listWidth" : 300,
               "listeners" : {
                "render" : [
                 "function (_self)",
                 "{",
                 "    if(typeof(Pman.Mail) == 'undefined') {",
                 "        _self.hide();",
                 "    }",
                 "}"
                ],
                "select" : [
                 "function (combo, record, index)",
                 "{",
                 "    _this.form.findField('from_name').setValue(record.data.name);",
                 "}"
                ]
               },
               "loadingText" : "Searching...",
               "minChars" : 1,
               "name" : "from_email_combo",
               "pageSize" : 20,
               "qtip" : "Email",
               "selectOnFocus" : true,
               "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{name}</b> {email}</div>",
               "triggerAction" : "all",
               "typeAhead" : false,
               "valueField" : "id",
               "width" : 300,
               "xtype" : "ComboBox"
              },
              {
               "$ xns" : "Roo.form",
               "Boolean forceSelection" : true,
               "allowBlank" : true,
               "alwaysQuery" : true,
               "displayField" : "name",
               "editable" : false,
               "emptyText" : "Select BCC Group",
               "fieldLabel" : "BCC Group",
               "hiddenName" : "bcc_group_id",
               "items" : [
                {
                 "$ sortInfo" : "{ direction : 'ASC', field: 'name' }",
                 "$ xns" : "Roo.data",
                 "* prop" : "store",
                 "items" : [
                  {
                   "$ url" : "baseURL + '/Roo/Core_group'",
                   "$ xns" : "Roo.data",
                   "* prop" : "proxy",
                   "method" : "GET",
                   "xtype" : "HttpProxy"
                  },
                  {
                   "$ fields" : "[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"id\",\"type\":\"int\"}]",
                   "$ xns" : "Roo.data",
                   "* prop" : "reader",
                   "id" : "name",
                   "root" : "data",
                   "totalProperty" : "total",
                   "xtype" : "JsonReader"
                  }
                 ],
                 "listeners" : {
                  "|beforeload" : [
                   "function (_self, o){",
                   "    o.params = o.params || {};",
                   "    ",
                   "    o.params._direct_return = 1;",
                   "}",
                   ""
                  ]
                 },
                 "remoteSort" : true,
                 "xtype" : "Store"
                }
               ],
               "loadingText" : "Searching...",
               "minChars" : 2,
               "name" : "bcc_group_id_name",
               "pageSize" : 25,
               "qtip" : "Select BCC Group",
               "selectOnFocus" : true,
               "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{name}</b> </div>",
               "triggerAction" : "all",
               "typeAhead" : true,
               "valueField" : "id",
               "width" : 300,
               "xtype" : "ComboBox"
              }
             ],
             "xtype" : "Row"
            },
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "allowBlank" : false,
               "fieldLabel" : "Subject",
               "name" : "subject",
               "width" : 600,
               "xtype" : "TextField"
              },
              {
               "$ xns" : "Roo.form",
               "allowBlank" : false,
               "displayField" : "title",
               "editable" : false,
               "fieldLabel" : "Language",
               "hiddenName" : "language",
               "items" : [
                {
                 "$ fields" : "['code', 'title']",
                 "$ xns" : "Roo.data",
                 "* prop" : "store",
                 "xtype" : "SimpleStore",
                 "| data" : "(function() {return typeof(Pman) == 'object'  ? Pman.I18n.simpleStoreData('l') : []})()"
                }
               ],
               "listWidth" : 200,
               "mode" : "local",
               "name" : "language_name",
               "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{title}</b> </div>",
               "triggerAction" : "all",
               "valueField" : "code",
               "width" : 200,
               "xtype" : "ComboBox"
              }
             ],
             "xtype" : "Row"
            },
            {
             "$ xns" : "Roo.form",
             "hideLabels" : true,
             "items" : [
              {
               "$ xns" : "Roo.form",
               "hideLabels" : true,
               "items" : [
                {
                 "$ cwhite" : [
                  "[ ",
                  "    'background',",
                  "    'background-color',",
                  "    'border',",
                  "    'border-radius',",
                  "    'border-bottom',",
                  "    'border-left',",
                  "    'border-right',",
                  "    'border-top',",
                  "    'border-collapse',",
                  "     'border-color',",
                  "     'border-style',",
                  "    'border-width',",
                  "",
                  "    ",
                  "    'box-shadow',",
                  "    'clear',",
                  "    'color',",
                  "    'cursor',",
                  "    'display',",
                  "    'float' ,",
                  "    'font-family',",
                  "    'font-size',",
                  "    'font-style',        ",
                  "    'font-weight',",
                  "",
                  "    'height',",
                  "    'left',",
                  "    'line-height',",
                  "    'list-style',",
                  "    'margin',",
                  "    'margin-bottom',",
                  "    'margin-left',",
                  "    'margin-right',",
                  "    'margin-top',",
                  "    'max-width',",
                  "    'min-height',",
                  "    '-ms-interpolation-mode',",
                  "    'mso-table-rspace',",
                  "    '-ms-text-size-adjust',",
                  "    'outline',",
                  "    'overflow',",
                  "    'padding',",
                  "    'padding-bottom',",
                  "    'padding-left',",
                  "    'padding-right',",
                  "    'padding-top',",
                  "    'position',",
                  "    'right',",
                  "    'text-align',",
                  "    'text-decoration',",
                  "    'top',",
                  "    'vertical-align',",
                  "    '-webkit-text-size-adjust',",
                  "    'width',",
                  "    'width',",
                  "    'z-index'",
                  " ]"
                 ],
                 "$ xns" : "Roo.form",
                 "bool allowComments" : true,
                 "boolean autoClean" : false,
                 "boolean enableBlocks" : false,
                 "clearUp" : false,
                 "height" : 250,
                 "items" : [
                  {
                   "$ xns" : "Roo.form.HtmlEditor",
                   "* prop" : "toolbars[]",
                   "xtype" : "ToolbarContext"
                  },
                  {
                   "$ xns" : "Roo.form.HtmlEditor",
                   "* prop" : "toolbars[]",
                   "items" : [
                    {
                     "$ xns" : "Roo.form",
                     "* prop" : "btns[]",
                     "alwaysQuery" : true,
                     "displayField" : "name",
                     "editable" : false,
                     "emptyText" : "Add Image",
                     "fieldLabel" : "Images",
                     "forceSelection" : true,
                     "items" : [
                      {
                       "$ sortInfo" : "{ direction : 'ASC', field: 'id' }",
                       "$ xns" : "Roo.data",
                       "* prop" : "store",
                       "items" : [
                        {
                         "$ url" : "baseURL + '/Roo/Images.php'",
                         "$ xns" : "Roo.data",
                         "* prop" : "proxy",
                         "method" : "GET",
                         "xtype" : "HttpProxy"
                        },
                        {
                         "$ fields" : "[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filename\",\"type\":\"string\"},{\"name\":\"url_thumb\",\"type\":\"string\"}]",
                         "$ xns" : "Roo.data",
                         "* prop" : "reader",
                         "id" : "id",
                         "root" : "data",
                         "totalProperty" : "total",
                         "xtype" : "JsonReader"
                        }
                       ],
                       "listeners" : {
                        "|beforeload" : [
                         "function (_self, o){",
                         "    o.params = o.params || {};",
                         "",
                         "    var id = _this.form.findField('id').getValue() * 1;    ",
                         "    if (!id) {",
                         "        Roo.MessageBox.alert(\"Error\", \"Save email template first\");",
                         "        return false;",
                         "    }",
                         "    o.params.onid = id;",
                         "    o.params.ontable = (_this.data.module) ? _this.data.module : 'crm_mailing_list_message';",
                         "    ",
                         "   // o.params.imgtype = 'PressRelease';",
                         "    //o.params['query[imagesize]'] = '150x150';",
                         "    // set more here",
                         "}",
                         ""
                        ]
                       },
                       "remoteSort" : true,
                       "xtype" : "Store"
                      }
                     ],
                     "listWidth" : 400,
                     "listeners" : {
                      "beforequery" : [
                       "function (combo, query, forceAll, cancel, e)",
                       "{",
                       "    var id = _this.form.findField('id').getValue() * 1;    ",
                       "    if (!id) {",
                       "        Roo.MessageBox.alert(\"Error\", \"Save message first\");",
                       "        return false;",
                       "    }",
                       "}"
                      ],
                      "render" : [
                       "function (_self)",
                       "{",
                       "    _this.extendimgselect = _self;",
                       "}"
                      ],
                      "select" : [
                       "function (combo, record, index)",
                       "{",
                       "    Roo.log(record);",
                       "    (function() { ",
                       "        combo.setValue('');",
                       "    }).defer(100);",
                       "    var editor = _this.form.findField('bodytext').editorcore;",
                       "    ",
                       "    var curnode = editor.getSelectedNode();",
                       "    if (curnode && curnode.tagName == 'IMG') {",
                       "        curnode.src= String.format('{0}/Images/{1}/{2}#image-{1}',",
                       "                baseURL,  record.data.id, record.data.filename",
                       "            );",
                       "            // note -forces an update... hopefully...",
                       "        editor.owner.fireEvent('editorevent', editor, false);",
                       "    } else {",
                       "    ",
                       "        editor.insertAtCursor(",
                       "            String.format('<img src=\"{0}/Images/{1}/{2}#image-{1}\">',",
                       "            baseURL,  record.data.id, record.data.filename",
                       "            )",
                       "        );",
                       "",
                       "    }",
                       "    ",
                       " }"
                      ]
                     },
                     "loadingText" : "Searching...",
                     "minChars" : 2,
                     "pageSize" : 20,
                     "qtip" : "Select Images",
                     "selectOnFocus" : true,
                     "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><img src=\"{public_baseURL}/Core/Images/Thumb/150x150/{id}.jpg\" height=\"150\" width=\"150\"><b>{filename}</b> </div>",
                     "triggerAction" : "all",
                     "typeAhead" : true,
                     "valueField" : "id",
                     "width" : 100,
                     "xtype" : "ComboBox"
                    },
                    {
                     "$ xns" : "Roo.form",
                     "* prop" : "btns[]",
                     "String triggerAction" : "all",
                     "alwaysQuery" : true,
                     "displayField" : "name",
                     "editable" : false,
                     "emptyText" : "Insert Field",
                     "fieldLabel" : "Field",
                     "forceSelection" : true,
                     "items" : [
                      {
                       "$ data" : [
                        "[ ",
                        "    [ '{person.firstname}', \"First Name\"],",
                        "    [ '{person.lastname}' , \"Last Name\"],",
                        "    [ '{person.name}', \"Full Name\"],",
                        "    [ '#unsubscribe', \"Unsubscribe\"]",
                        "]",
                        ""
                       ],
                       "$ fields" : "[  'type', 'name']",
                       "$ xns" : "Roo.data",
                       "* prop" : "store",
                       "xtype" : "SimpleStore"
                      }
                     ],
                     "listWidth" : 400,
                     "listeners" : {
                      "render" : [
                       "function (_self)",
                       "{",
                       "    _this.unsubscribeselect = _self;",
                       "}"
                      ],
                      "select" : [
                       "function (combo, record, index)",
                       "{",
                       "    Roo.log(record);",
                       "    (function() { ",
                       "        combo.setValue('');",
                       "    }).defer(100);",
                       "    var editor = _this.form.findField('bodytext').editorcore;",
                       "    ",
                       "    if(record.data.name == 'Unsubscribe'){",
                       "        editor.insertAtCursor(",
                       "            String.format('<a href=\"{0}\">{1}</a>',",
                       "                record.data.type,  record.data.name",
                       "            )",
                       "        );",
                       "        return;     ",
                       "    }",
                       "    ",
                       "    editor.insertAtCursor(",
                       "        String.format('{0}',",
                       "            record.data.type",
                       "        )",
                       "    );",
                       "    ",
                       " }"
                      ]
                     },
                     "loadingText" : "Searching...",
                     "minChars" : 2,
                     "pageSize" : 20,
                     "qtip" : "Insert Field",
                     "selectOnFocus" : true,
                     "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{name}</b> </div>",
                     "typeAhead" : true,
                     "valueField" : "type",
                     "width" : 100,
                     "xtype" : "ComboBox"
                    },
                    {
                     "$ xns" : "Roo.Toolbar",
                     "* prop" : "btns[]",
                     "xtype" : "Separator"
                    },
                    {
                     "$ xns" : "Roo.Toolbar",
                     "* prop" : "btns[]",
                     "String cls" : "x-init-enable",
                     "listeners" : {
                      "click" : [
                       "function (_self, e)",
                       "{",
                       "    this.scope.owner.fireEvent('savedpreview', this.scope.owner);",
                       "    ",
                       "}"
                      ]
                     },
                     "text" : "Saved Version",
                     "xtype" : "Button"
                    }
                   ],
                   "xtype" : "ToolbarStandard"
                  }
                 ],
                 "listeners" : {
                  "autosave" : [
                   "function (_self)",
                   "{",
                   "    Roo.log('autosave');",
                   "    ",
                   "    var id = _this.form.findField('id').getValue() * 1;",
                   "    ",
                   "    /*",
                   "    if(!_self.editorcore.sourceEditMode){",
                   "        _self.syncValue();",
                   "    }else{",
                   "        _self.pushValue();",
                   "    }",
                   "    */",
                   "",
                   "    ",
                   "    new Pman.Request({",
                   "        url : baseURL + '/Roo/Events.php',",
                   "        method :'POST',",
                   "        params : {",
                   "            id : 0,",
                   "            action : 'AUTOSAVE',",
                   "            on_id : (id > 0) ? id : 0,",
                   "            on_table : 'crm_mailing_list_message',",
                   "            remarks : 'BODY',",
                   "            source: _self.getValue()",
                   "        },",
                   "        success : function() {",
                   "            _self.originalValue = _self.getValue();",
                   "            if (_this.dialog.isVisible()) {",
                   "                _self.autosave.defer(5000, _self);",
                   "            }",
                   "            ",
                   "            ",
                   "        },",
                   "        failure : function() ",
                   "        {",
                   "            Roo.log('body autosave failed?!');",
                   "            // try again.",
                   "            if (_this.dialog.isVisible()) {",
                   "                _self.autosave.defer(5000, _self);",
                   "            }",
                   "        }",
                   "    });",
                   "    ",
                   "}"
                  ],
                  "savedpreview" : [
                   "function (_self)",
                   "{",
                   "    var id = _this.form.findField('id').getValue() * 1;",
                   "    ",
                   "    var successFn = function(res){",
                   "        return res.data.POST.source;",
                   "    };",
                   "    ",
                   "    var params = {",
                   "        action : 'AUTOSAVE',",
                   "        remarks : 'BODY',",
                   "        on_id : (id < 1) ? 0 : id,",
                   "        on_table : 'crm_mailing_list_message',",
                   "        successFn : successFn",
                   "    };",
                   "    ",
                   "    ",
                   "    Pman.Dialog.CoreAutoSavePreview.show(params, function(res){",
                   "        _self.setValue(res);",
                   "        _self.originalValue = res;",
                   "    });",
                   "}"
                  ]
                 },
                 "name" : "bodytext",
                 "resizable" : "s",
                 "xtype" : "HtmlEditor",
                 "| function autosave" : [
                  "function() {",
                  "    ",
                  "    var body = _this.form.findField('bodytext');",
                  "    ",
                  "    if(!body.wrap.isVisible(true) || body.getValue() == '' || !body.isDirty()){",
                  "        Roo.log('body not dirty');",
                  "        return;",
                  "    }",
                  "    ",
                  "    Roo.log('body dirty, auto save!');",
                  "    ",
                  "    body.fireEvent('autosave', body);",
                  "   ",
                  "}",
                  ""
                 ]
                }
               ],
               "legend" : "Html Editor",
               "style" : "text-align:center;",
               "xtype" : "FieldSet"
              }
             ],
             "xtype" : "Row"
            },
            {
             "$ xns" : "Roo.form",
             "hideLabels" : true,
             "items" : [
              {
               "$ xns" : "Roo",
               "listeners" : {
                "click" : [
                 "function (_self, e)",
                 "{",
                 "    var h = _this.form.findField('bodytext').getValue();",
                 "    var p = _this.form.findField('plaintext');",
                 "    ",
                 "    new Pman.Request({\r",
                 "        url : baseURL + '/Core/ImportMailMessage.php',\r",
                 "        method : 'POST',\r",
                 "        params : {",
                 "          bodytext : h,\r",
                 "          _convertToPlain : true,",
                 "          _check_unsubscribe : true\r",
                 "        }, \r",
                 "        success : function(res) {\r",
                 "            if(res.success == true){",
                 "               p.setValue(res.data);",
                 "            }\r",
                 "        }\r",
                 "    });",
                 "    ",
                 "}"
                ]
               },
               "text" : "Convert Html to Text",
               "xtype" : "Button"
              }
             ],
             "xtype" : "Row"
            },
            {
             "$ xns" : "Roo.form",
             "hideLabels" : true,
             "items" : [
              {
               "$ xns" : "Roo.form",
               "hideLabels" : true,
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "height" : 50,
                 "name" : "plaintext",
                 "xtype" : "TextArea"
                }
               ],
               "legend" : "Plain Text",
               "style" : "text-align:center;",
               "xtype" : "FieldSet"
              }
             ],
             "xtype" : "Row"
            },
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "Boolean readOnly" : true,
               "allowBlank" : true,
               "fieldLabel" : "Test Class <BR/> (for system reference only)",
               "name" : "test_class",
               "width" : 300,
               "xtype" : "TextField"
              }
             ],
             "xtype" : "Row"
            },
            {
             "$ xns" : "Roo.form",
             "name" : "id",
             "xtype" : "Hidden"
            },
            {
             "$ xns" : "Roo.form",
             "String name" : "stripo_id",
             "xtype" : "Hidden"
            },
            {
             "$ xns" : "Roo.form",
             "String name" : "from_email",
             "xtype" : "Hidden"
            }
           ],
           "labelAlign" : "right",
           "labelWidth" : 120,
           "listeners" : {
            "|actioncomplete" : [
             "function(_self,action)",
             "{",
             "   ",
             "    if (action.type == 'setdata') {",
             "    ",
             "        var bt = _this.form.findField('bodytext');",
             "        bt.autosave.defer(5000,bt);",
             "        ",
             "        _this.data.module = _this.data.module || 'crm_mailing_list_message';",
             "        ",
             "        _this.form.url = baseURL + '/Roo/' + _this.data.module;",
             "        ",
             "        _this.html_preview.hide();",
             "        _this.preview_btn.hide();",
             "        _this.stripoUpdate.hide();",
             "        _this.sendBtn.hide();",
             "        _this.sendTestBtn.hide();",
             "        ",
             "        ",
             "          if (typeof(_this.data._fields) != 'undefined') {",
             "              _this.unsubscribeselect.store.proxy.data = _this.data._fields;",
             "          }",
             "        ",
             "        ",
             "        if(typeof(_this.data.module) != 'undefined' && _this.data.module == 'crm_mailing_list_message') {",
             "            _this.sendTestBtn.show();",
             "        }",
             "            ",
             "        if(_this.data.id*1 > 0){",
             "            _this.dialog.el.mask(\"Loading\");",
             "            this.load({ method: 'GET', params: { '_id' : _this.data.id }});",
             "            _this.html_preview.show();",
             "            _this.preview_btn.show();",
             "            ",
             "        } else {",
             "            _this.form.setValues({",
             "                'from_name' : Pman.Login.authUser.name,",
             "                'from_email' : Pman.Login.authUser.email,",
             "                'language': Pman.Login.authUser.lang == '' ? 'en' : Pman.Login.authUser.lang",
             "            });",
             "            ",
             "            _this.form.findField('from_email_text').setValue(_this.form.findField('from_email').getValue());",
             "            ",
             "            ",
             "            if(typeof(Pman.Mail) != 'undefined') {",
             "                Pman.Request({",
             "                    url: baseURL + '/Roo/Mail_imap_user.php',",
             "                    method: 'GET',",
             "                    params: {",
             "                        _email_senders: 1",
             "                    },",
             "                    success: function(res) {",
             "                        if(!res.data.length) {",
             "                            return;",
             "                        }",
             "                        _this.form.setValues({",
             "                            'from_name' : res.data[0].name,",
             "                            'from_email' : res.data[0].email",
             "                        });",
             "                        _this.form.findField('from_email_combo').setValue(_this.form.findField('from_email').getValue());",
             "                    }",
             "                });",
             "            }",
             "        }",
             "       return;",
             "    }",
             "    if (action.type == 'load') {",
             "        _this.dialog.el.unmask();",
             "        _this.saveBtn.setText('Save & Close');",
             "        ",
             "        _this.form.findField('bodytext').originalValue = _this.form.findField('bodytext').getValue();",
             "        ",
             "        var emailField = typeof(Pman.Mail) == 'undefined' ? 'from_email_text' : 'from_email_combo';",
             "        _this.form.findField(emailField).setValue(_this.form.findField('from_email').getValue());",
             "        ",
             "        if(typeof(_this.data.module) != 'undefined' && _this.data.module == 'crm_mailing_list_message') {",
             "            if(_this.form.findField('stripo_id').getValue() > 0) {",
             "                _this.stripoUpdate.show();",
             "            }",
             "            _this.sendBtn.show();",
             "            _this.sendTestBtn.show();",
             "        }",
             "        ",
             "        return;",
             "    }",
             "    if (action.type =='submit') {",
             "        var module = _this.data.module;",
             "    ",
             "        _this.dialog.el.unmask();",
             "        _this.data = action.result.data;",
             "        ",
             "        if (_this.form.findField('id').getValue() * 1 < 1) {",
             "            _this.form.findField('id').setValue(action.result.data.id);",
             "            _this.saveBtn.setText('Save & Close');",
             "            ",
             "            if(typeof(module) != 'undefined' && module == 'crm_mailing_list_message') {",
             "                _this.html_preview.show();",
             "                _this.preview_btn.show();",
             "                ",
             "                if(_this.form.findField('stripo_id').getValue() > 0) {",
             "                    _this.stripoUpdate.show();",
             "                }",
             "                _this.sendBtn.show();",
             "            }",
             "            ",
             "            if(typeof(_this.sendTest) == 'undefined' || _this.sendTest !== true) {",
             "                return;",
             "            }",
             "        }",
             "        ",
             "        _this.dialog.hide();",
             "         if (_this.callback) {",
             "            _this.callback.call(_this, action.result.data);",
             "         }",
             "         ",
             "         if(typeof(_this.saveAndSend) != 'undefined' && _this.saveAndSend === true) {",
             "            _this.saveAndSend = false;",
             "            Pman.Dialog.CrmMailingListQueue.show( {",
             "                id : 0,",
             "                message_id : _this.form.findField('id').getValue(),",
             "                message_id_name : _this.form.findField('name').getValue()",
             "            }, function() {",
             "                // change the tab to queue...",
             "                var i = Pman.Tab.Crm.layout.getRegion('center').panels.indexOf(Pman.Tab.Crm.layout.getRegion('center').getActivePanel());",
             "                Pman.Tab.Crm.layout.getRegion('center').showPanel(i + 1);",
             "            });",
             "         }",
             "         ",
             "         if(typeof(_this.sendTest) != 'undefined' && _this.sendTest == true) {",
             "            _this.sendTest = false;",
             "            Pman.Dialog.CrmMailingListQueue.show( {",
             "                id : 0,",
             "                message_id : _this.form.findField('id').getValue(),",
             "                message_id_name : _this.form.findField('name').getValue(),",
             "                _send_test: 1",
             "            }, function() {",
             "                // change the tab to queue...",
             "                var i = Pman.Tab.Crm.layout.getRegion('center').panels.indexOf(Pman.Tab.Crm.layout.getRegion('center').getActivePanel());",
             "                Pman.Tab.Crm.layout.getRegion('center').showPanel(i + 1);",
             "            });",
             "        }",
             "         _this.form.reset();",
             "         return;",
             "    }",
             "}",
             ""
            ],
            "|rendered" : [
             "function (form)",
             "{",
             "    _this.form= form;",
             "}",
             ""
            ]
           },
           "method" : "POST",
           "style" : "margin:10px",
           "xtype" : "Form"
          }
         ],
         "listeners" : {
          "render" : [
           "function (_self, width, height)",
           "{",
           "    ",
           "      Roo.log(\"RESIZE, \" + width + ',' + height);",
           "    ",
           "    var ew = Math.max(250, width-50);",
           "    var eh = Math.max(250,height-50) ;",
           "    ",
           "   ",
           "",
           "}"
          ],
          "resize" : [
           "function (_self, width, height)\r",
           "{\r",
           "   var ew = Math.max(250, width-50);\r",
           "    var eh = Math.max(250,height-50) ;",
           "    ",
           "    if (!_this.form) {\r",
           "        return;\r",
           "    }\r",
           "    var bdtext = _this.form.findField('bodytext');\r",
           "    var ptext = _this.form.findField('plaintext');\r",
           "    if(bdtext.resizeEl){\r",
           "        bdtext.width = ew-50;\r",
           "        bdtext.resizeEl.resizeTo.defer(110, bdtext.resizeEl,[ bdtext.width, bdtext.height  ] );\r",
           "        ptext.setSize(bdtext.width , bdtext.height);\r",
           "    }\r\r",
           "\r",
           "}"
          ]
         },
         "region" : "center",
         "title" : "Message",
         "xtype" : "ContentPanel"
        }
       ],
       "xtype" : "BorderLayout"
      }
     ],
     "region" : "center",
     "xtype" : "NestedLayoutPanel"
    },
    {
     "$ xns" : "Roo",
     "background" : true,
     "fitContainer" : true,
     "fitToframe" : true,
     "items" : [
      {
       "$ xns" : "Roo.grid",
       "* prop" : "grid",
       "autoExpandColumn" : "event_id_remarks",
       "items" : [
        {
         "$ xns" : "Roo.grid",
         "* prop" : "sm",
         "singleSelect" : true,
         "xtype" : "RowSelectionModel"
        },
        {
         "$ sortInfo" : "{ field : 'act_when', direction: 'DESC' }",
         "$ xns" : "Roo.data",
         "* prop" : "dataSource",
         "items" : [
          {
           "$ url" : "baseURL + '/Roo/Core_notify.php'",
           "$ xns" : "Roo.data",
           "* prop" : "proxy",
           "method" : "GET",
           "xtype" : "HttpProxy"
          },
          {
           "$ fields" : [
            "[",
            "    {",
            "        'name': 'id',",
            "        'type': 'int'",
            "    }",
            "]"
           ],
           "$ xns" : "Roo.data",
           "* prop" : "reader",
           "id" : "id",
           "root" : "data",
           "totalProperty" : "total",
           "xtype" : "JsonReader"
          }
         ],
         "listeners" : {
          "beforeload" : [
           "function (_self, options)",
           "{",
           "    options.params = options.params || {};",
           "    ",
           "    /*",
           "    ",
           "    options.params.ontable = 'crm_mailing_list_queue';",
           "    ",
           "    options.params.crm_person_id = _this.form.findField('id').getValue();",
           "    options.params['query[status]'] = _this.status.getValue();",
           "    */",
           "}"
          ]
         },
         "remoteSort" : true,
         "xtype" : "Store"
        },
        {
         "$ xns" : "Roo",
         "* prop" : "footer",
         "displayInfo" : true,
         "displayMsg" : "Displaying Notifications{0} - {1} of {2}",
         "emptyMsg" : "No Notifications found",
         "pageSize" : 25,
         "xtype" : "PagingToolbar"
        },
        {
         "$ xns" : "Roo",
         "* prop" : "toolbar",
         "items" : [
          {
           "$ xns" : "Roo.Toolbar",
           "xtype" : "Fill"
          }
         ],
         "xtype" : "Toolbar"
        },
        {
         "$ renderer" : [
          "function(v) ",
          "{ ",
          "    return String.format('{0}', v );",
          "}"
         ],
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "id",
         "header" : "Ref#",
         "width" : 50,
         "xtype" : "ColumnModel"
        },
        {
         "$ renderer" : [
          "function(v) ",
          "{ ",
          "    return String.format('{0}', (v) ? v.format('d/M/Y h:ia') : '' );",
          "}"
         ],
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "sent",
         "header" : "Sent Date",
         "width" : 120,
         "xtype" : "ColumnModel"
        },
        {
         "$ renderer" : "function(v) { return String.format('{0}', v ? 'YES' : 'NO'); }",
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "msgid",
         "header" : "Delivered",
         "width" : 75,
         "xtype" : "ColumnModel"
        },
        {
         "$ renderer" : "function(v) { return String.format('<span qtip=\"{0}\">{0}</span>', v ); }",
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "event_id_remarks",
         "header" : "Remarks",
         "width" : 200,
         "xtype" : "ColumnModel"
        }
       ],
       "listeners" : {
        "celldblclick" : [
         "function (_self, rowIndex, columnIndex, e)",
         "{",
         "    var r = _self.ds.getAt(rowIndex);",
         "    if(r.data.event_id) {",
         "        Pman.Dialog.CoreViewWebsite.show({url: baseURL + '/Admin/EventView/' + r.data.event_id + '.html'});",
         "    }",
         "    ",
         "}"
        ],
        "|render" : [
         "function() ",
         "{",
         "    _this.mgrid = this; ",
         "    //_this.dialog = Pman.Dialog.FILL_IN",
         "    if (_this.mpanel.active) {",
         "       this.footer.onClick('first');",
         "    }",
         "}"
        ]
       },
       "loadMask" : true,
       "xtype" : "Grid"
      }
     ],
     "listeners" : {
      "|activate" : [
       "function() {",
       "    _this.mpanel = this;",
       "    if (_this.mgrid) {",
       "        _this.mgrid.footer.onClick('first');",
       "    }",
       "}"
      ]
     },
     "region" : "center",
     "tableName" : "Groups",
     "title" : "History",
     "xtype" : "GridPanel"
    },
    {
     "$ xns" : "Roo",
     "autoScroll" : false,
     "background" : false,
     "fitContainer" : true,
     "fitToframe" : true,
     "items" : [
      {
       "$ xns" : "Roo.grid",
       "* prop" : "grid",
       "autoExpandColumn" : "filename",
       "items" : [
        {
         "$ sortInfo" : "{ field : 'filename', direction: 'ASC' }",
         "$ xns" : "Roo.data",
         "* prop" : "dataSource",
         "items" : [
          {
           "$ url" : "baseURL + '/Roo/Images.php'",
           "$ xns" : "Roo.data",
           "* prop" : "proxy",
           "method" : "GET",
           "xtype" : "HttpProxy"
          },
          {
           "$ fields" : [
            "[",
            "    {",
            "        'name': 'id',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'filename',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'ontable',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'onid',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'mimetype',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'width',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'height',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'filesize',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'displayorder',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'language',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'created',",
            "        'type': 'date',",
            "        'dateFormat': 'Y-m-d'",
            "    },",
            "    {",
            "        'name': 'imgtype',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'linkurl',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'descript',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'title',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_id',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_filename',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_ontable',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_onid',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_mimetype',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_width',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_height',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_filesize',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_displayorder',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_language',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_parent_image_id',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_created',",
            "        'type': 'date'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_imgtype',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_linkurl',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_descript',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_title',",
            "        'type': 'string'",
            "    }",
            "]"
           ],
           "$ xns" : "Roo.data",
           "* prop" : "reader",
           "id" : "id",
           "root" : "data",
           "totalProperty" : "total",
           "xtype" : "JsonReader"
          }
         ],
         "listeners" : {
          "beforeload" : [
           "function (_self, options)",
           "{",
           "    options.params = options.params || {};",
           "    if (typeof(_this.data) == 'undefined') {",
           "        return false;",
           "    }",
           "    if(_this.data.id * 1 >= 0)",
           "    {",
           "        options.params.onid = _this.data.id;",
           "",
           "        options.params.ontable = (_this.data.module) ? _this.data.module : 'crm_mailing_list_message';",
           "    }",
           "}"
          ]
         },
         "remoteSort" : true,
         "xtype" : "Store"
        },
        {
         "$ xns" : "Roo",
         "* prop" : "toolbar",
         "items" : [
          {
           "$ icon" : "Roo.rootURL + 'images/default/dd/drop-add.gif'",
           "$ xns" : "Roo.Toolbar",
           "cls" : "x-btn-text-icon",
           "listeners" : {
            "|click" : [
             "function()",
             "{",
             "    var id = _this.form.findField('id').getValue();",
             "    ",
             "    if(id*1 < 1){",
             "        Roo.MessageBox.alert('Error', 'Please save the email template first');",
             "        return;",
             "    }",
             "    ",
             "    var ontable = (_this.data.module) ? _this.data.module : 'crm_mailing_list_message';",
             "    ",
             "    Pman.Dialog.Image.show( { id : 0, onid: id, ontable: ontable }, function() {",
             "        _this.igrid.getDataSource().load({});",
             "    });",
             "}",
             ""
            ]
           },
           "text" : "Add",
           "xtype" : "Button"
          },
          {
           "$ icon" : "rootURL + '/Pman/templates/images/trash.gif'",
           "$ xns" : "Roo.Toolbar",
           "cls" : "x-btn-text-icon",
           "listeners" : {
            "|click" : [
             "function()",
             "{",
             "           Pman.genericDelete({grid: _this.igrid}, 'Images');",
             "}",
             "        "
            ]
           },
           "text" : "Delete",
           "xtype" : "Button"
          }
         ],
         "xtype" : "Toolbar"
        },
        {
         "$ renderer" : [
          "function(v,x,r)",
          "{",
          "    var width = r.data.width;",
          "    var height = r.data.height;",
          "    ",
          "    if(width > 50){",
          "        height = Math.round(height * 50 / width);",
          "        width = 50;",
          "    }",
          "    ",
          "   return '<img src=\"' + baseURL + '/Images/' + r.data.id + '/' + r.data.filename + '\" width=\"' + width + '\" height=\"' + height + '\" />';",
          "}"
         ],
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "filename",
         "header" : "Filename",
         "width" : 300,
         "xtype" : "ColumnModel"
        },
        {
         "$ renderer" : "function(v) { return String.format('{0}', v); }",
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "displayorder",
         "header" : "Displayorder",
         "width" : 75,
         "xtype" : "ColumnModel"
        },
        {
         "$ renderer" : "function(v) { return String.format('{0}', v); }",
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "title",
         "header" : "Title",
         "width" : 75,
         "xtype" : "ColumnModel"
        }
       ],
       "listeners" : {
        "|render" : [
         "function() ",
         "{",
         "    _this.igrid = this; ",
         "    //_this.dialog = Pman.Dialog.FILL_IN",
         "    if (_this.ipanel.active) {",
         "   //    _this.igrid.ds.load({});",
         "    }",
         "}"
        ]
       },
       "loadMask" : true,
       "xtype" : "Grid"
      }
     ],
     "listeners" : {
      "|activate" : [
       "function() {",
       "    _this.ipanel = this;",
       "    if (_this.igrid) {",
       "       _this.igrid.ds.load({});",
       "    }",
       "}"
      ]
     },
     "region" : "east",
     "tableName" : "Images",
     "title" : "Images / Attachments",
     "xtype" : "GridPanel"
    },
    {
     "$ xns" : "Roo",
     "* prop" : "buttons[]",
     "listeners" : {
      "click" : [
       "function (_self, e)",
       "{",
       "    _this.dialog.hide();",
       "    if (_this.callback) {",
       "        _this.callback.call(_this, _this.data);",
       "    }",
       "    _this.form.reset();",
       "}"
      ]
     },
     "text" : "Cancel",
     "xtype" : "Button"
    },
    {
     "$ xns" : "Roo",
     "* prop" : "buttons[]",
     "listeners" : {
      "click" : [
       "function (_self, e)",
       "{",
       "",
       "    // do some checks?",
       "    _this.form.preValidate(function(res) {",
       "        if (!res) {",
       "            return; //failed.",
       "        }",
       "         _this.form.doAction(\"submit\");",
       "    });",
       "",
       "}"
      ],
      "render" : [
       "function (_self)",
       "{",
       "    _this.saveBtn = this;",
       "}"
      ]
     },
     "text" : "Save",
     "xtype" : "Button"
    },
    {
     "$ xns" : "Roo",
     "* prop" : "buttons[]",
     "listeners" : {
      "click" : [
       "function (_self, e)",
       "{",
       "    ",
       "    _this.form.preValidate(function(res) {",
       "        if (!res) {",
       "            return; //failed.",
       "        }",
       "        ",
       "        _this.saveAndSend = true;",
       "        _this.form.doAction(\"submit\");",
       "    });",
       "",
       "    ",
       "}"
      ],
      "render" : [
       "function (_self)",
       "{",
       "    _this.sendBtn = this;",
       "}"
      ]
     },
     "text" : "Save & Send",
     "xtype" : "Button"
    },
    {
     "$ xns" : "Roo",
     "* prop" : "buttons[]",
     "listeners" : {
      "click" : [
       "function (_self, e)",
       "{",
       "    ",
       "    _this.form.preValidate(function(res) {",
       "        if (!res) {",
       "            return; //failed.",
       "        }",
       "        ",
       "        _this.sendTest = true;",
       "        _this.form.doAction(\"submit\");",
       "    });",
       "",
       "    ",
       "}"
      ],
      "render" : [
       "function (_self)",
       "{",
       "    _this.sendTestBtn = this;",
       "}"
      ]
     },
     "text" : "Send to test group",
     "xtype" : "Button"
    }
   ],
   "listeners" : {
    "show" : [
     "function (_self)",
     "{",
     "    _self.layout.getRegion('center').showPanel(0);",
     "    var w = Roo.lib.Dom.getViewWidth();\r",
     "    var h = Roo.lib.Dom.getViewHeight();    \r    this.resizeTo(w-50, h-50);\r",
     "    this.center();\r    ",
     "    var ew = Math.max(250, w-320);\r",
     "    var eh = Math.max(250, h-350) ;\r",
     "    var e = _this.dialog.layout.getRegion('east');",
     "    if (e.visible) {",
     "        e.hide();",
     "    }",
     "    ",
     "    var el = _self.getEl();",
     "    var elw = el.dom.clientWidth;",
     "    ",
     "    var bdtext = _this.form.findField('bodytext');",
     "    var ptext = _this.form.findField('plaintext');",
     "    if(bdtext.resizeEl){",
     "        bdtext.width = elw-100;",
     "        bdtext.resizeEl.resizeTo.defer(110, bdtext.resizeEl,[ bdtext.width, bdtext.height  ] );",
     "        ptext.setSize(bdtext.width , bdtext.height);",
     "    }",
     "    ",
     "}"
    ]
   },
   "modal" : true,
   "resizable" : true,
   "title" : "Edit / Create Message",
   "width" : 800,
   "xtype" : "LayoutDialog"
  }
 ],
 "modOrder" : "001",
 "name" : "Pman.Dialog.CoreEmail",
 "named_strings" : {
  "active_boxLabel" : "28690be026c0bb9003aa58e45e5662ca",
  "active_value" : "c4ca4238a0b923820dcc509a6f75849b",
  "alt_email_fieldLabel" : "20eccd627374be9efeaa81e67c2e1443",
  "bcc_group_id_name_emptyText" : "2c466a2c159463f1d9ef5a7b57b52827",
  "bcc_group_id_name_fieldLabel" : "68b00d723d37122f64da8d9939f836f0",
  "bcc_group_id_name_loadingText" : "1243daf593fa297e07ab03bf06d925af",
  "bcc_group_id_name_qtip" : "2c466a2c159463f1d9ef5a7b57b52827",
  "comptype_id_display_name_fieldLabel" : "1814dfa23ca67a5b93237922728b52e3",
  "comptype_id_display_name_value" : "d41d8cd98f00b204e9800998ecf8427e",
  "crm_business_focus_fieldLabel" : "38be0abb8dcd2feda6d12b0f0cfb553d",
  "crm_business_focus_value" : "d41d8cd98f00b204e9800998ecf8427e",
  "crm_client_of_competitor_fieldLabel" : "8a38074d3c311563d2ebd05955ff4d19",
  "crm_client_of_competitor_value" : "d41d8cd98f00b204e9800998ecf8427e",
  "crm_current_relationship_id_display_name_emptyText" : "51ce726b5887583d02d44df083c49ecc",
  "crm_current_relationship_id_display_name_fieldLabel" : "844cb2d0c0304fd7df39b2f522c8c5cc",
  "crm_current_relationship_id_display_name_loadingText" : "1243daf593fa297e07ab03bf06d925af",
  "crm_current_relationship_id_display_name_qtip" : "51ce726b5887583d02d44df083c49ecc",
  "crm_industry_id_display_name_fieldLabel" : "4fd0a37b0a02153b23bbb61d7915a429",
  "crm_industry_id_display_name_value" : "d41d8cd98f00b204e9800998ecf8427e",
  "crm_is_decision_maker_fieldLabel" : "4da9ac510e44c4852d1290ab76b985a8",
  "crm_is_primary_contact_fieldLabel" : "f8b41731930d0fb224210173cd5eff40",
  "crm_is_private_fieldLabel" : "6b7d38bed7d958f7e63e32157910c6b2",
  "crm_is_unsubscribed_fieldLabel" : "b79f8efa60d31fefaae5e9aaaf3b2e70",
  "crm_location_covered_display_name_fieldLabel" : "fad695291417e5155ae516f699edefa1",
  "crm_role_function_id_display_name_emptyText" : "34d3f3e02279790a36c15a8f013ad426",
  "crm_role_function_id_display_name_fieldLabel" : "acdc0b2d908229fb89cfa39c25c8442f",
  "crm_role_function_id_display_name_loadingText" : "1243daf593fa297e07ab03bf06d925af",
  "crm_role_function_id_display_name_qtip" : "34d3f3e02279790a36c15a8f013ad426",
  "crm_source_id_display_name_emptyText" : "777171b4509a74cdb3ad40069c584d02",
  "crm_source_id_display_name_fieldLabel" : "f31bbdd1b3e85bccd652680e16935819",
  "crm_source_id_display_name_loadingText" : "1243daf593fa297e07ab03bf06d925af",
  "crm_source_id_display_name_qtip" : "777171b4509a74cdb3ad40069c584d02",
  "domain_id_no_mx_dt_fieldLabel" : "4dba2e47f2f6bc2d0347e04dd44ecf9b",
  "email_fails_fieldLabel" : "c87d56de44398002b913008dac333ce7",
  "email_fieldLabel" : "ce8ae9da5b7cd6c3df2929543a9af92d",
  "email_is_spam_fieldLabel" : "70012379217db5897b48b958401effc3",
  "firstname_fieldLabel" : "bc910f8bdf70f29374f496f05be0330c",
  "from_email_combo_emptyText" : "8a10310fb61d63d1711b319163eff1b1",
  "from_email_combo_fieldLabel" : "b357b524e740bc85b9790a0712d84a30",
  "from_email_combo_loadingText" : "1243daf593fa297e07ab03bf06d925af",
  "from_email_combo_qtip" : "ce8ae9da5b7cd6c3df2929543a9af92d",
  "from_email_text_fieldLabel" : "b357b524e740bc85b9790a0712d84a30",
  "from_name_fieldLabel" : "5da618e8e4b89c66fe86e32cdafde142",
  "honor_fieldLabel" : "3a03f13c6360d706b597de533eadb22d",
  "honor_loadingText" : "1243daf593fa297e07ab03bf06d925af",
  "is_action_required_fieldLabel" : "f789853b5a3d39a56a2fb59b0892b598",
  "lang_name_fieldLabel" : "6d222e766779a92d741327ef936686c0",
  "lang_name_loadingText" : "1243daf593fa297e07ab03bf06d925af",
  "lang_name_qtip" : "6c768695a8efb18436d5b7b4374cdb45",
  "language_name_fieldLabel" : "4994a8ffeba4ac3140beb89e8d41f174",
  "lastname_fieldLabel" : "77587239bf4c54ea493c7033e1dbf636",
  "meeting_notes_fieldLabel" : "e5d579ff9d4caf59887ae80dff261acf",
  "name_fieldLabel" : "b20a8b77b05d53b4e695738731400c85",
  "name_loadingText" : "1243daf593fa297e07ab03bf06d925af",
  "name_qtip" : "6c768695a8efb18436d5b7b4374cdb45",
  "office_phone_fieldLabel" : "df814135652a5a308fea15bff37ea284",
  "owner_id_name_emptyText" : "21ec484b4de76650a90d349763586b01",
  "owner_id_name_fieldLabel" : "96fdac283668b2490c859ef6ea97c86e",
  "owner_id_name_loadingText" : "1243daf593fa297e07ab03bf06d925af",
  "owner_id_name_qtip" : "a2fa78bdc038a0a1df5caff2ac1ad945",
  "phone_direct_fieldLabel" : "69a696cc505197bd6b17c2f85b692faa",
  "phone_mobile_fieldLabel" : "87d17f4624a514e81dc7c8e016a7405c",
  "project_id_fs_boxLabel" : "6d2b3c608551bf2a38dc0c8b6cb298bc",
  "project_id_fs_fieldLabel" : "0d41a61d4678361579ed786ea1a15772",
  "project_id_name_emptyText" : "ded4cba1b04eb8236e24a3e39470d8a7",
  "project_id_name_fieldLabel" : "f00a1d99f6f47917006e88a803ecde1f",
  "project_id_name_loadingText" : "1243daf593fa297e07ab03bf06d925af",
  "project_id_name_qtip" : "6a58f977f2b623b695a340766f2a6843",
  "remarks_fieldLabel" : "db530ec5680ef36a942d39c25043928d",
  "role_fieldLabel" : "754e1e134bc554a0af39749edbb59b9f",
  "subject_fieldLabel" : "c7892ebbb139886662c6f2fc8c450710",
  "test_class_fieldLabel" : "b337c8a67244afb6551ee1f8f9717676",
  "url_blog_fieldLabel" : "90bfdc4085f24f340d732886ca10e1a0",
  "url_fieldLabel" : "15bbb9d0bbf25e8d2978de1168c749dc",
  "url_linkedin_fieldLabel" : "e884c507c5198a4578a84498f7a323e2",
  "url_twitter_fieldLabel" : "751d204230c22fb929f7feb90884a959",
  "url_value" : "d41d8cd98f00b204e9800998ecf8427e",
  "wechat_id_fieldLabel" : "01c3c4d5f15312f6c0ae7913eb54e1d9"
 },
 "parent" : "",
 "path" : "/home/leon/gitlive/web.MediaOutreach/Pman/Core/Pman.Dialog.CoreEmail.bjs",
 "permname" : "",
 "strings" : {
  "01c3c4d5f15312f6c0ae7913eb54e1d9" : "WeChat ID",
  "054c93063db5b62b23b48ef801f27aa0" : "Phone numbers",
  "0736d73357df264e67d36a66b519122d" : "Add Office",
  "0d41a61d4678361579ed786ea1a15772" : "AutoFile?",
  "0de4afdad57ed10d2663be2f84481601" : "Ownership",
  "10ffcae93e0ef4941193179b3b2f2d6a" : "<div class=\"x-grid-cell-text x-btn button\">{pressrelease_id:this.formatPR}{name:this.formatName} </div>",
  "1243daf593fa297e07ab03bf06d925af" : "Searching...",
  "1351017ac6423911223bc19a8cb7c653" : "Filename",
  "15bbb9d0bbf25e8d2978de1168c749dc" : "Website",
  "16d2b386b2034b9488996466aaae0b57" : "History",
  "1814dfa23ca67a5b93237922728b52e3" : "Company Type",
  "20eccd627374be9efeaa81e67c2e1443" : "Secondary Email",
  "21ec484b4de76650a90d349763586b01" : "Select Owner",
  "231bc72756b5e6de492aaaa1577f61b1" : "Remarks",
  "2393ad754ba179442d85e415d1d5167c" : "Displayorder",
  "28690be026c0bb9003aa58e45e5662ca" : "Enabled - will be sent out",
  "2c466a2c159463f1d9ef5a7b57b52827" : "Select BCC Group",
  "2f26e35d61be90501e099089dc533638" : "Select Images",
  "308f2757bfc9ce92fb00ff93fdffd279" : "Images / Attachments",
  "318e5e65b99bb99f6ec676ac53045808" : "No Notifications found",
  "31fde7b05ac8952dacf4af8a704074ec" : "Preview",
  "34d3f3e02279790a36c15a8f013ad426" : "Select Job Function",
  "38be0abb8dcd2feda6d12b0f0cfb553d" : "Business Focus",
  "396ecabf0cd1f9503e591418851ef406" : "Edit / Create Message",
  "3a03f13c6360d706b597de533eadb22d" : "Honorific",
  "3ec365dd533ddb7ef3d1c111186ce872" : "Details",
  "4994a8ffeba4ac3140beb89e8d41f174" : "Language",
  "4c2a8fe7eaf24721cc7a9f0175115bd4" : "Message",
  "4da9ac510e44c4852d1290ab76b985a8" : "Key Decision Maker",
  "4dba2e47f2f6bc2d0347e04dd44ecf9b" : "No mx records since",
  "4fd0a37b0a02153b23bbb61d7915a429" : "Industry",
  "51ce726b5887583d02d44df083c49ecc" : "Select Current Relationship",
  "5b7d0fb4422f6d5854b9827293ece5ea" : "Sent Date",
  "5b8ef4e762c00a15a41cfc26dc3ef99c" : "Send me a test copy",
  "5da618e8e4b89c66fe86e32cdafde142" : "From",
  "5feb9bf3c03b32635135006cbacb9542" : "Insert Field",
  "66bc3ece76861852889e623217049d32" : "Edit Company Details",
  "67edd3b99247c9eb5884a02802a20fa7" : "Delivered",
  "68b00d723d37122f64da8d9939f836f0" : "BCC Group",
  "69a696cc505197bd6b17c2f85b692faa" : "Direct Line",
  "6a58f977f2b623b695a340766f2a6843" : "Select Project ",
  "6b7d38bed7d958f7e63e32157910c6b2" : "For my eyes only",
  "6c768695a8efb18436d5b7b4374cdb45" : "Select core_enum",
  "6d222e766779a92d741327ef936686c0" : "Spoken Language",
  "6d2b3c608551bf2a38dc0c8b6cb298bc" : "Always File Messages from this Person in Project",
  "6f16a5f8ff5d75ab84c018adacdfcbb7" : "Field",
  "6f54043edff88231017ffe8a1f092f44" : "Contact Details",
  "6fa7053e67f9aca02815e903a655ef3d" : "Save & Send",
  "70012379217db5897b48b958401effc3" : "Is Spammer",
  "751d204230c22fb929f7feb90884a959" : "Twitter handle",
  "754e1e134bc554a0af39749edbb59b9f" : "Job Title",
  "77587239bf4c54ea493c7033e1dbf636" : "Last Name",
  "777171b4509a74cdb3ad40069c584d02" : "Select a Source",
  "844cb2d0c0304fd7df39b2f522c8c5cc" : "Current Relationship",
  "86266ee937d97f812a8e57d22b62ee29" : "reset",
  "87d17f4624a514e81dc7c8e016a7405c" : "Mobile",
  "8a10310fb61d63d1711b319163eff1b1" : "Select email",
  "8a38074d3c311563d2ebd05955ff4d19" : "Client of",
  "90bfdc4085f24f340d732886ca10e1a0" : "Blog Website",
  "962b90039a542a29cedd51d87a9f28a1" : "Html Editor",
  "96fdac283668b2490c859ef6ea97c86e" : "Owner of this record",
  "9b7ac356a686920f9f832ebd7d94997c" : "Project Filing",
  "9c9745a343efeacc9efe9b7222b27afb" : "Ref#",
  "a2fa78bdc038a0a1df5caff2ac1ad945" : "Who owns this record",
  "a3e4f4667d88fd6ee4604cebc8d34255" : "Contact Status",
  "acdc0b2d908229fb89cfa39c25c8442f" : "Job Function",
  "b20a8b77b05d53b4e695738731400c85" : "Mailout Name",
  "b28cf7bd6a7d817ef920bc394ab49731" : "Select?",
  "b2902068bd468131aae5469000ead0f9" : "Displaying Notifications{0} - {1} of {2}",
  "b337c8a67244afb6551ee1f8f9717676" : "Test Class <BR/> (for system reference only)",
  "b357b524e740bc85b9790a0712d84a30" : "Email address",
  "b78a3223503896721cca1303f776159b" : "Title",
  "b79f8efa60d31fefaae5e9aaaf3b2e70" : "Un-subscribed",
  "b9c49611cfda3259a2b837b39489e650" : "Add Image",
  "bc910f8bdf70f29374f496f05be0330c" : "First Name",
  "bd88a20b53a47f7b5704a83a15ff5506" : "Saved Version",
  "be649b4ca625c123850b1d9125753d7c" : "Spam Status",
  "c4ca4238a0b923820dcc509a6f75849b" : "1",
  "c7892ebbb139886662c6f2fc8c450710" : "Subject",
  "c87d56de44398002b913008dac333ce7" : "Fails",
  "c9cc8cce247e49bae79f15173ce97354" : "Save",
  "ce8ae9da5b7cd6c3df2929543a9af92d" : "Email",
  "d41d8cd98f00b204e9800998ecf8427e" : "",
  "d7a278dd23696e10a4346c918891a82a" : "update MX",
  "db530ec5680ef36a942d39c25043928d" : "Key Reference Notes",
  "dd7bf230fde8d4836917806aff6a6b27" : "Address",
  "de57d217310a391ad6c5f41d651ddae2" : "Send to test group",
  "ded4cba1b04eb8236e24a3e39470d8a7" : "Select Campaign",
  "df814135652a5a308fea15bff37ea284" : "Office",
  "e44b145bd8b49b06e0ad2ced1ad56466" : "Plain Text",
  "e5d579ff9d4caf59887ae80dff261acf" : "First Meeting Notes",
  "e7b47c58815acf1d3afa59a84b5db7fb" : "Company Name",
  "e884c507c5198a4578a84498f7a323e2" : "LinkedIn",
  "e9968623956c15023d54335ea3699855" : "Convert Html to Text",
  "ea30b40c3caf28acb29198d20d243e54" : "Images / Attachments >>",
  "ea4788705e6873b424c65e91c2846b19" : "Cancel",
  "ec211f7c20af43e742bf2570c3cb84f9" : "Add",
  "ee3629f5936b16869c4687c79bab8e42" : "Delete Office",
  "ee7dad31fea478292f8e2dd24133c6a9" : "Personal Details",
  "f00a1d99f6f47917006e88a803ecde1f" : "Campaign",
  "f2a6c498fb90ee345d997f888fce3b18" : "Delete",
  "f3017f202748e13d3554a15cbbd1b767" : "Refresh from Stripo",
  "f31bbdd1b3e85bccd652680e16935819" : "Source",
  "f789853b5a3d39a56a2fb59b0892b598" : "Is Action Required?",
  "f8b41731930d0fb224210173cd5eff40" : "Primary Contact",
  "fad695291417e5155ae516f699edefa1" : "Locations Covered/Targeted",
  "fff0d600f8a0b5e19e88bfb821dd1157" : "Images"
 },
 "title" : ""
}