{
 "items" : [
  {
   "$ xns" : "Roo",
   "closable" : true,
   "collapsible" : false,
   "height" : 500,
   "items" : [
    {
     "$ xns" : "Roo",
     "* prop" : "center",
     "tabPosition" : "top",
     "xtype" : "LayoutRegion"
    },
    {
     "$ xns" : "Roo",
     "* prop" : "east",
     "hidden" : true,
     "split" : true,
     "title" : "Images / Attachments",
     "titlebar" : true,
     "width" : 500,
     "xtype" : "LayoutRegion"
    },
    {
     "$ xns" : "Roo",
     "autoScroll" : false,
     "fitContainer" : true,
     "fitToFrame" : true,
     "items" : [
      {
       "$ xns" : "Roo",
       "* prop" : "toolbar",
       "items" : [
        {
         "$ xns" : "Roo.Toolbar",
         "listeners" : {
          "render" : [
           "function (_self)",
           "{",
           "    _this.preview_btn = _self;",
           "}"
          ],
          "|click" : [
           "function()",
           "{",
           "    //_this.dialog.hide();",
           "    Roo.log(_this.data.module);",
           "    Pman.Dialog.CoreEmailPreview.show({ id : _this.form.findField('id').getValue(), module : _this.data.module });",
           "}",
           ""
          ]
         },
         "text" : "Preview",
         "xtype" : "Button"
        },
        {
         "$ xns" : "Roo.Toolbar",
         "listeners" : {
          "render" : [
           "function (_self)",
           "{",
           "    _this.html_preview = _self;",
           "}"
          ],
          "|click" : [
           "function()",
           "{",
           "    //_this.dialog.hide();",
           "",
           "    var id = _this.form.findField('id').getValue();",
           "    ",
           "    if(id*1 < 1){",
           "        Roo.MessageBox.alert('Error', 'Please save the message frist!');",
           "        return;",
           "    }",
           "   ",
           "    new Pman.Request({",
           "        url : baseURL + '/Core/MessagePreview',",
           "        method : 'POST',",
           "        mask: 'Sending',",
           "        params : {",
           "            _id : id,",
           "            _table : _this.data.module",
           "        }, ",
           "        success : function(res) { ",
           "            if(res.data == 'SUCCESS'){",
           "                Roo.MessageBox.alert(\"Email Sent\", 'The report was sent to your email (HTML format).');",
           "            }",
           "        }",
           "    });",
           "}",
           ""
          ]
         },
         "text" : "Send me a test copy",
         "xtype" : "Button"
        },
        {
         "$ xns" : "Roo.Toolbar",
         "String text" : "Refresh from Stripo",
         "listeners" : {
          "click" : [
           "function (_self, e)",
           "{",
           "}"
          ],
          "render" : [
           "function (_self)",
           "{",
           "    if(",
           "        typeof(Pman.Dialog.CrmMailingListQueue) == 'undefined' ",
           "        || typeof(Pman.Tab.Crm) == 'undefined'",
           "        || typeof(_this.data.stripo_id) == 'undefined'",
           "        || _this.data.stripo_id > 0",
           "    ) {",
           "        _self.hide();",
           "    }",
           "}"
          ]
         },
         "xtype" : "Button"
        },
        {
         "$ xns" : "Roo.Toolbar",
         "xtype" : "Fill"
        },
        {
         "$ xns" : "Roo.Toolbar",
         "listeners" : {
          "click" : [
           "function (_self, e)",
           "{",
           "    var el = _this.dialog.layout.getRegion('east');",
           "    if (el.visible) {",
           "        el.hide();",
           "    } else {",
           "        el.show();",
           "        el.showPanel(0);",
           "    }",
           "    ",
           "}"
          ]
         },
         "text" : "Images / Attachments >>",
         "xtype" : "Button"
        }
       ],
       "xtype" : "Toolbar"
      },
      {
       "$ xns" : "Roo",
       "* prop" : "layout",
       "items" : [
        {
         "$ xns" : "Roo",
         "* prop" : "center",
         "autoScroll" : true,
         "xtype" : "LayoutRegion"
        },
        {
         "$ xns" : "Roo",
         "autoScroll" : false,
         "background" : false,
         "fitContainer" : true,
         "fitToFrame" : true,
         "items" : [
          {
           "$ preValidate" : [
            "function(done_callback) {",
            "    ",
            "    Roo.MessageBox.progress(\"Uploading Images\", \"Uploading\");",
            "    ",
            "    if(!_this.form.findField('bodytext').editorcore.sourceEditMode){",
            "        _this.form.findField('bodytext').syncValue();",
            "    }else{",
            "        _this.form.findField('bodytext').pushValue();",
            "    }",
            "    ",
            "    var html = _this.form.findField('bodytext').getValue();",
            "    ",
            "    var s = Roo.get(_this.form.findField('bodytext').editorcore.doc.documentElement);",
            "    ",
            "    var ontable = (_this.data.module) ? _this.data.module : 'crm_mailing_list_message';",
            "    ",
            "    var nodes = [];",
            "    s.select('img[src]').each(function(i) {",
            "        nodes.push(i.dom);",
            "    });",
            "    var total = nodes.length;",
            "    var mkimg = function() {",
            "    ",
            "        if (!nodes.length) {",
            "              Roo.MessageBox.hide();",
            "              _this.form.findField('bodytext').syncValue();",
            "              done_callback(true);",
            "           //    _this.form.doAction(\"submit\");",
            "              return;",
            "        }",
            "        var i = nodes.pop(); ",
            "        ",
            "        var n = i.getAttribute('src').match(/(baseURL|server_baseurl)/);",
            "        ",
            "        if(n){",
            "            mkimg();",
            "            return;",
            "        }",
            "        ",
            "        n = i.getAttribute('src').match(/^http(.*)/);",
            "       ",
            "        if(!n ){",
            "            mkimg();",
            "            return;",
            "        }",
            "        ",
            "        new Pman.Request({",
            "            url : baseURL + '/Roo/Images.php',",
            "            method : 'POST',",
            "            params : {",
            "                onid : _this.form.findField('id').getValue(),",
            "                ontable : ontable ,",
            "                _remote_upload : i.src",
            "            },",
            "            success : function(res){",
            "                if(res.success == true){      ",
            "                    i.setAttribute('src', res.data);",
            "                    Roo.MessageBox.updateProgress( (total - nodes.length) / total , \"Done \" + (total - nodes.length) + '/' + total);",
            "                }",
            "                mkimg();",
            "            }",
            "        });",
            "       ",
            "    }",
            "    ",
            "    if (!_this.form.findField('bodytext').getValue().match(/unsubscribe/i)) {",
            "        Roo.MessageBox.confirm(\"Missing unusubscribe\",",
            "            \"There is no unsubscribe link on the email  are you sure you want to save it\",",
            "            function(res) {",
            "                if (res == 'no') {",
            "                    return;",
            "                }",
            "                mkimg();",
            "            }",
            "        );",
            "",
            "        return;",
            "    }",
            "    ",
            "    mkimg();",
            "}",
            ""
           ],
           "$ url" : "baseURL + '/Roo/crm_mailing_list_message.php'",
           "$ xns" : "Roo.form",
           "items" : [
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "allowBlank" : false,
               "fieldLabel" : "Mailout Name",
               "name" : "name",
               "width" : 400,
               "xtype" : "TextField"
              },
              {
               "$ xns" : "Roo.form",
               "Number labelWidth" : 0,
               "String labelSeparator" : " ",
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "Boolean checked" : true,
                 "Mixed value" : 1,
                 "String boxLabel" : "Enabled - will be sent out",
                 "String name" : "active",
                 "String valueOff" : 0,
                 "listeners" : {
                  "check" : [
                   "function (_self, checked)",
                   "{",
                   "    var boxLabel = 'Enabled - will be sent out';",
                   "    ",
                   "    if(!checked){",
                   "        boxLabel = 'Disabled - will NOT be sent out';",
                   "    }",
                   "    ",
                   "    this.setBoxLabel(boxLabel);",
                   "}"
                  ]
                 },
                 "xtype" : "Checkbox"
                }
               ],
               "xtype" : "Column"
              }
             ],
             "xtype" : "Row"
            },
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "allowBlank" : false,
               "fieldLabel" : "From",
               "name" : "from_name",
               "width" : 300,
               "xtype" : "TextField"
              },
              {
               "$ xns" : "Roo.form",
               "allowBlank" : false,
               "fieldLabel" : "Email address",
               "name" : "from_email",
               "width" : 300,
               "xtype" : "TextField"
              },
              {
               "$ xns" : "Roo.form",
               "Boolean forceSelection" : true,
               "allowBlank" : true,
               "alwaysQuery" : true,
               "displayField" : "name",
               "editable" : false,
               "emptyText" : "Select BCC Group",
               "fieldLabel" : "BCC Group",
               "hiddenName" : "bcc_group_id",
               "items" : [
                {
                 "$ sortInfo" : "{ direction : 'ASC', field: 'name' }",
                 "$ xns" : "Roo.data",
                 "* prop" : "store",
                 "items" : [
                  {
                   "$ url" : "baseURL + '/Roo/Core_group'",
                   "$ xns" : "Roo.data",
                   "* prop" : "proxy",
                   "method" : "GET",
                   "xtype" : "HttpProxy"
                  },
                  {
                   "$ fields" : "[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"id\",\"type\":\"int\"}]",
                   "$ xns" : "Roo.data",
                   "* prop" : "reader",
                   "id" : "name",
                   "root" : "data",
                   "totalProperty" : "total",
                   "xtype" : "JsonReader"
                  }
                 ],
                 "listeners" : {
                  "|beforeload" : [
                   "function (_self, o){",
                   "    o.params = o.params || {};",
                   "    ",
                   "    o.params._direct_return = 1;",
                   "}",
                   ""
                  ]
                 },
                 "remoteSort" : true,
                 "xtype" : "Store"
                }
               ],
               "loadingText" : "Searching...",
               "minChars" : 2,
               "name" : "bcc_group_id_name",
               "pageSize" : 25,
               "qtip" : "Select BCC Group",
               "selectOnFocus" : true,
               "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{name}</b> </div>",
               "triggerAction" : "all",
               "typeAhead" : true,
               "valueField" : "id",
               "width" : 300,
               "xtype" : "ComboBox"
              }
             ],
             "xtype" : "Row"
            },
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "allowBlank" : false,
               "fieldLabel" : "Subject",
               "name" : "subject",
               "width" : 600,
               "xtype" : "TextField"
              },
              {
               "$ xns" : "Roo.form",
               "allowBlank" : false,
               "displayField" : "title",
               "editable" : false,
               "fieldLabel" : "Language",
               "hiddenName" : "language",
               "items" : [
                {
                 "$ fields" : "['code', 'title']",
                 "$ xns" : "Roo.data",
                 "* prop" : "store",
                 "xtype" : "SimpleStore",
                 "| data" : "(function() {return typeof(Pman) == 'object'  ? Pman.I18n.simpleStoreData('l') : []})()"
                }
               ],
               "listWidth" : 200,
               "mode" : "local",
               "name" : "language_name",
               "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{title}</b> </div>",
               "triggerAction" : "all",
               "valueField" : "code",
               "width" : 200,
               "xtype" : "ComboBox"
              }
             ],
             "xtype" : "Row"
            },
            {
             "$ xns" : "Roo.form",
             "hideLabels" : true,
             "items" : [
              {
               "$ xns" : "Roo.form",
               "hideLabels" : true,
               "items" : [
                {
                 "$ cwhite" : [
                  "[ ",
                  "    'background',",
                  "    'background-color',",
                  "    'border',",
                  "    'border-radius',",
                  "    'border-bottom',",
                  "    'border-left',",
                  "    'border-right',",
                  "    'border-top',",
                  "    'border-collapse',",
                  "     'border-color',",
                  "     'border-style',",
                  "    'border-width',",
                  "",
                  "    ",
                  "    'box-shadow',",
                  "    'clear',",
                  "    'color',",
                  "    'cursor',",
                  "    'display',",
                  "    'float' ,",
                  "    'font-family',",
                  "    'font-size',",
                  "    'font-style',        ",
                  "    'font-weight',",
                  "",
                  "    'height',",
                  "    'left',",
                  "    'line-height',",
                  "    'list-style',",
                  "    'margin',",
                  "    'margin-bottom',",
                  "    'margin-left',",
                  "    'margin-right',",
                  "    'margin-top',",
                  "    'max-width',",
                  "    'min-height',",
                  "    '-ms-interpolation-mode',",
                  "    'mso-table-rspace',",
                  "    '-ms-text-size-adjust',",
                  "    'outline',",
                  "    'overflow',",
                  "    'padding',",
                  "    'padding-bottom',",
                  "    'padding-left',",
                  "    'padding-right',",
                  "    'padding-top',",
                  "    'position',",
                  "    'right',",
                  "    'text-align',",
                  "    'text-decoration',",
                  "    'top',",
                  "    'vertical-align',",
                  "    '-webkit-text-size-adjust',",
                  "    'width',",
                  "    'width',",
                  "    'z-index'",
                  " ]"
                 ],
                 "$ xns" : "Roo.form",
                 "bool allowComments" : true,
                 "boolean autoClean" : false,
                 "boolean enableBlocks" : false,
                 "clearUp" : false,
                 "height" : 250,
                 "items" : [
                  {
                   "$ xns" : "Roo.form.HtmlEditor",
                   "* prop" : "toolbars[]",
                   "xtype" : "ToolbarContext"
                  },
                  {
                   "$ xns" : "Roo.form.HtmlEditor",
                   "* prop" : "toolbars[]",
                   "items" : [
                    {
                     "$ xns" : "Roo.form",
                     "* prop" : "btns[]",
                     "alwaysQuery" : true,
                     "displayField" : "name",
                     "editable" : false,
                     "emptyText" : "Add Image",
                     "fieldLabel" : "Images",
                     "forceSelection" : true,
                     "items" : [
                      {
                       "$ sortInfo" : "{ direction : 'ASC', field: 'id' }",
                       "$ xns" : "Roo.data",
                       "* prop" : "store",
                       "items" : [
                        {
                         "$ url" : "baseURL + '/Roo/Images.php'",
                         "$ xns" : "Roo.data",
                         "* prop" : "proxy",
                         "method" : "GET",
                         "xtype" : "HttpProxy"
                        },
                        {
                         "$ fields" : "[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filename\",\"type\":\"string\"},{\"name\":\"url_thumb\",\"type\":\"string\"}]",
                         "$ xns" : "Roo.data",
                         "* prop" : "reader",
                         "id" : "id",
                         "root" : "data",
                         "totalProperty" : "total",
                         "xtype" : "JsonReader"
                        }
                       ],
                       "listeners" : {
                        "|beforeload" : [
                         "function (_self, o){",
                         "    o.params = o.params || {};",
                         "",
                         "    var id = _this.form.findField('id').getValue() * 1;    ",
                         "    if (!id) {",
                         "        Roo.MessageBox.alert(\"Error\", \"Save email template first\");",
                         "        return false;",
                         "    }",
                         "    o.params.onid = id;",
                         "    o.params.ontable = (_this.data.module) ? _this.data.module : 'crm_mailing_list_message';",
                         "    ",
                         "   // o.params.imgtype = 'PressRelease';",
                         "    //o.params['query[imagesize]'] = '150x150';",
                         "    // set more here",
                         "}",
                         ""
                        ]
                       },
                       "remoteSort" : true,
                       "xtype" : "Store"
                      }
                     ],
                     "listWidth" : 400,
                     "listeners" : {
                      "beforequery" : [
                       "function (combo, query, forceAll, cancel, e)",
                       "{",
                       "    var id = _this.form.findField('id').getValue() * 1;    ",
                       "    if (!id) {",
                       "        Roo.MessageBox.alert(\"Error\", \"Save message first\");",
                       "        return false;",
                       "    }",
                       "}"
                      ],
                      "render" : [
                       "function (_self)",
                       "{",
                       "    _this.extendimgselect = _self;",
                       "}"
                      ],
                      "select" : [
                       "function (combo, record, index)",
                       "{",
                       "    Roo.log(record);",
                       "    (function() { ",
                       "        combo.setValue('');",
                       "    }).defer(100);",
                       "    var editor = _this.form.findField('bodytext').editorcore;",
                       "    ",
                       "    var curnode = editor.getSelectedNode();",
                       "    if (curnode && curnode.tagName == 'IMG') {",
                       "        curnode.src= String.format('{0}/Images/{1}/{2}#image-{1}',",
                       "                baseURL,  record.data.id, record.data.filename",
                       "            );",
                       "            // note -forces an update... hopefully...",
                       "        editor.owner.fireEvent('editorevent', editor, false);",
                       "    } else {",
                       "    ",
                       "        editor.insertAtCursor(",
                       "            String.format('<img src=\"{0}/Images/{1}/{2}#image-{1}\">',",
                       "            baseURL,  record.data.id, record.data.filename",
                       "            )",
                       "        );",
                       "",
                       "    }",
                       "    ",
                       " }"
                      ]
                     },
                     "loadingText" : "Searching...",
                     "minChars" : 2,
                     "pageSize" : 20,
                     "qtip" : "Select Images",
                     "selectOnFocus" : true,
                     "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><img src=\"{public_baseURL}/Core/Images/Thumb/150x150/{id}.jpg\" height=\"150\" width=\"150\"><b>{filename}</b> </div>",
                     "triggerAction" : "all",
                     "typeAhead" : true,
                     "valueField" : "id",
                     "width" : 100,
                     "xtype" : "ComboBox"
                    },
                    {
                     "$ xns" : "Roo.form",
                     "* prop" : "btns[]",
                     "alwaysQuery" : true,
                     "displayField" : "name",
                     "editable" : false,
                     "emptyText" : "Insert Field",
                     "fieldLabel" : "Field",
                     "forceSelection" : true,
                     "items" : [
                      {
                       "$ data" : [
                        "[ ",
                        "    [ '{person.firstname}', \"First Name\"],",
                        "    [ '{person.lastname}' , \"Last Name\"],",
                        "    [ '{person.name}', \"Full Name\"],",
                        "    [ '#unsubscribe', \"Unsubscribe\"]",
                        "]",
                        ""
                       ],
                       "$ fields" : "[  'type', 'name']",
                       "$ xns" : "Roo.data",
                       "* prop" : "store",
                       "xtype" : "SimpleStore"
                      }
                     ],
                     "listWidth" : 400,
                     "listeners" : {
                      "render" : [
                       "function (_self)",
                       "{",
                       "    _this.unsubscribeselect = _self;",
                       "}"
                      ],
                      "select" : [
                       "function (combo, record, index)",
                       "{",
                       "    Roo.log(record);",
                       "    (function() { ",
                       "        combo.setValue('');",
                       "    }).defer(100);",
                       "    var editor = _this.form.findField('bodytext').editorcore;",
                       "    ",
                       "    if(record.data.name == 'Unsubscribe'){",
                       "        editor.insertAtCursor(",
                       "            String.format('<a href=\"{0}\">{1}</a>',",
                       "                record.data.type,  record.data.name",
                       "            )",
                       "        );",
                       "        return;     ",
                       "    }",
                       "    ",
                       "    editor.insertAtCursor(",
                       "        String.format('{0}',",
                       "            record.data.type",
                       "        )",
                       "    );",
                       "    ",
                       " }"
                      ]
                     },
                     "loadingText" : "Searching...",
                     "minChars" : 2,
                     "pageSize" : 20,
                     "qtip" : "Insert Field",
                     "selectOnFocus" : true,
                     "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{name}</b> </div>",
                     "triggerAction" : "all",
                     "typeAhead" : true,
                     "valueField" : "type",
                     "width" : 100,
                     "xtype" : "ComboBox"
                    },
                    {
                     "$ xns" : "Roo.Toolbar",
                     "* prop" : "btns[]",
                     "xtype" : "Separator"
                    },
                    {
                     "$ xns" : "Roo.Toolbar",
                     "* prop" : "btns[]",
                     "String cls" : "x-init-enable",
                     "listeners" : {
                      "click" : [
                       "function (_self, e)",
                       "{",
                       "    this.scope.owner.fireEvent('savedpreview', this.scope.owner);",
                       "    ",
                       "}"
                      ]
                     },
                     "text" : "Saved Version",
                     "xtype" : "Button"
                    }
                   ],
                   "xtype" : "ToolbarStandard"
                  }
                 ],
                 "listeners" : {
                  "autosave" : [
                   "function (_self)",
                   "{",
                   "    Roo.log('autosave');",
                   "    ",
                   "    var id = _this.form.findField('id').getValue() * 1;",
                   "    ",
                   "    /*",
                   "    if(!_self.editorcore.sourceEditMode){",
                   "        _self.syncValue();",
                   "    }else{",
                   "        _self.pushValue();",
                   "    }",
                   "    */",
                   "    ",
                   "    new Pman.Request({",
                   "        url : baseURL + '/Roo/Events.php',",
                   "        method :'POST',",
                   "        params : {",
                   "            id : 0,",
                   "            action : 'AUTOSAVE',",
                   "            on_id : (id > 0) ? id : 0,",
                   "            on_table : 'crm_mailing_list_message',",
                   "            remarks : 'BODY',",
                   "            source: _self.getValue()",
                   "        },",
                   "        success : function() {",
                   "            _self.originalValue = _self.getValue();",
                   "            ",
                   "        },",
                   "        failure : function() ",
                   "        {",
                   "            Roo.log('body autosave failed?!');",
                   "        }",
                   "    });",
                   "    ",
                   "}"
                  ],
                  "savedpreview" : [
                   "function (_self)",
                   "{",
                   "    var id = _this.form.findField('id').getValue() * 1;",
                   "    ",
                   "    var successFn = function(res){",
                   "        return res.data.POST.source;",
                   "    };",
                   "    ",
                   "    var params = {",
                   "        action : 'AUTOSAVE',",
                   "        remarks : 'BODY',",
                   "        on_id : (id < 1) ? 0 : id,",
                   "        on_table : 'crm_mailing_list_message',",
                   "        successFn : successFn",
                   "    };",
                   "    ",
                   "    ",
                   "    Pman.Dialog.CoreAutoSavePreview.show(params, function(res){",
                   "        _self.setValue(res);",
                   "        _self.originalValue = res;",
                   "    });",
                   "}"
                  ]
                 },
                 "name" : "bodytext",
                 "resizable" : "s",
                 "xtype" : "HtmlEditor",
                 "| function autosave" : [
                  "function() {",
                  "    ",
                  "    var body = _this.form.findField('bodytext');",
                  "    ",
                  "    if(!body.wrap.isVisible(true) || body.getValue() == '' || !body.isDirty()){",
                  "        Roo.log('body not dirty');",
                  "        return;",
                  "    }",
                  "    ",
                  "    Roo.log('body dirty, auto save!');",
                  "    ",
                  "    body.fireEvent('autosave', body);",
                  "   ",
                  "}",
                  ""
                 ]
                }
               ],
               "legend" : "Html Editor",
               "style" : "text-align:center;",
               "xtype" : "FieldSet"
              }
             ],
             "xtype" : "Row"
            },
            {
             "$ xns" : "Roo.form",
             "hideLabels" : true,
             "items" : [
              {
               "$ xns" : "Roo",
               "listeners" : {
                "click" : [
                 "function (_self, e)",
                 "{",
                 "    var h = _this.form.findField('bodytext').getValue();",
                 "    var p = _this.form.findField('plaintext');",
                 "    ",
                 "    new Pman.Request({\r",
                 "        url : baseURL + '/Core/ImportMailMessage.php',\r",
                 "        method : 'POST',\r",
                 "        params : {",
                 "          bodytext : h,\r",
                 "          _convertToPlain : true,",
                 "          _check_unsubscribe : true\r",
                 "        }, \r",
                 "        success : function(res) {\r",
                 "            if(res.success == true){",
                 "               p.setValue(res.data);",
                 "            }\r",
                 "        }\r",
                 "    });",
                 "    ",
                 "}"
                ]
               },
               "text" : "Convert Html to Text",
               "xtype" : "Button"
              }
             ],
             "xtype" : "Row"
            },
            {
             "$ xns" : "Roo.form",
             "hideLabels" : true,
             "items" : [
              {
               "$ xns" : "Roo.form",
               "hideLabels" : true,
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "height" : 50,
                 "name" : "plaintext",
                 "xtype" : "TextArea"
                }
               ],
               "legend" : "Plain Text",
               "style" : "text-align:center;",
               "xtype" : "FieldSet"
              }
             ],
             "xtype" : "Row"
            },
            {
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "Boolean readOnly" : true,
               "allowBlank" : true,
               "fieldLabel" : "Test Class <BR/> (for system reference only)",
               "name" : "test_class",
               "width" : 300,
               "xtype" : "TextField"
              }
             ],
             "xtype" : "Row"
            },
            {
             "$ xns" : "Roo.form",
             "name" : "id",
             "xtype" : "Hidden"
            }
           ],
           "labelAlign" : "right",
           "labelWidth" : 120,
           "listeners" : {
            "|actioncomplete" : [
             "function(_self,action)",
             "{",
             "   ",
             "    if (action.type == 'setdata') {",
             "    ",
             "        setInterval(_this.form.findField('bodytext').autosave, 5000);",
             "        ",
             "        _this.data.module = _this.data.module || 'crm_mailing_list_message';",
             "        ",
             "        _this.form.url = baseURL + '/Roo/' + _this.data.module;",
             "        ",
             "        _this.html_preview.hide();",
             "        _this.preview_btn.hide();",
             "            ",
             "        if(_this.data.id*1 > 0){",
             "            _this.dialog.el.mask(\"Loading\");",
             "            this.load({ method: 'GET', params: { '_id' : _this.data.id }});",
             "            _this.html_preview.show();",
             "            _this.preview_btn.show();",
             "            ",
             "        } else {",
             "            _this.form.setValues({",
             "                'from_name' : Pman.Login.authUser.name,",
             "                'from_email' : Pman.Login.authUser.email",
             "            });",
             "        }",
             "       return;",
             "    }",
             "    if (action.type == 'load') {",
             "        _this.dialog.el.unmask();",
             "        ",
             "        _this.form.findField('bodytext').originalValue = _this.form.findField('bodytext').getValue();",
             "        ",
             "        return;",
             "    }",
             "    if (action.type =='submit') {",
             "    ",
             "        _this.dialog.el.unmask();",
             "        _this.dialog.hide();",
             "    ",
             "         if (_this.callback) {",
             "            _this.callback.call(_this, action.result.data);",
             "         }",
             "         _this.form.reset();",
             "         return;",
             "    }",
             "}",
             ""
            ],
            "|rendered" : [
             "function (form)",
             "{",
             "    _this.form= form;",
             "}",
             ""
            ]
           },
           "method" : "POST",
           "style" : "margin:10px",
           "xtype" : "Form"
          }
         ],
         "listeners" : {
          "render" : [
           "function (_self, width, height)",
           "{",
           "    ",
           "      Roo.log(\"RESIZE, \" + width + ',' + height);",
           "    ",
           "    var ew = Math.max(250, width-50);",
           "    var eh = Math.max(250,height-50) ;",
           "    ",
           "   ",
           "",
           "}"
          ],
          "resize" : [
           "function (_self, width, height)\r",
           "{\r",
           "   var ew = Math.max(250, width-50);\r",
           "    var eh = Math.max(250,height-50) ;",
           "    ",
           "    if (!_this.form) {\r",
           "        return;\r",
           "    }\r",
           "    var bdtext = _this.form.findField('bodytext');\r",
           "    var ptext = _this.form.findField('plaintext');\r",
           "    if(bdtext.resizeEl){\r",
           "        bdtext.width = ew-50;\r",
           "        bdtext.resizeEl.resizeTo.defer(110, bdtext.resizeEl,[ bdtext.width, bdtext.height  ] );\r",
           "        ptext.setSize(bdtext.width , bdtext.height);\r",
           "    }\r\r",
           "\r",
           "}"
          ]
         },
         "region" : "center",
         "title" : "Message",
         "xtype" : "ContentPanel"
        }
       ],
       "xtype" : "BorderLayout"
      }
     ],
     "region" : "center",
     "xtype" : "NestedLayoutPanel"
    },
    {
     "$ xns" : "Roo",
     "autoScroll" : false,
     "background" : false,
     "fitContainer" : true,
     "fitToframe" : true,
     "items" : [
      {
       "$ xns" : "Roo.grid",
       "* prop" : "grid",
       "autoExpandColumn" : "filename",
       "items" : [
        {
         "$ sortInfo" : "{ field : 'filename', direction: 'ASC' }",
         "$ xns" : "Roo.data",
         "* prop" : "dataSource",
         "items" : [
          {
           "$ url" : "baseURL + '/Roo/Images.php'",
           "$ xns" : "Roo.data",
           "* prop" : "proxy",
           "method" : "GET",
           "xtype" : "HttpProxy"
          },
          {
           "$ fields" : [
            "[",
            "    {",
            "        'name': 'id',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'filename',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'ontable',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'onid',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'mimetype',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'width',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'height',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'filesize',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'displayorder',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'language',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'created',",
            "        'type': 'date',",
            "        'dateFormat': 'Y-m-d'",
            "    },",
            "    {",
            "        'name': 'imgtype',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'linkurl',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'descript',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'title',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_id',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_filename',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_ontable',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_onid',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_mimetype',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_width',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_height',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_filesize',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_displayorder',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_language',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_parent_image_id',",
            "        'type': 'int'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_created',",
            "        'type': 'date'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_imgtype',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_linkurl',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_descript',",
            "        'type': 'string'",
            "    },",
            "    {",
            "        'name': 'parent_image_id_title',",
            "        'type': 'string'",
            "    }",
            "]"
           ],
           "$ xns" : "Roo.data",
           "* prop" : "reader",
           "id" : "id",
           "root" : "data",
           "totalProperty" : "total",
           "xtype" : "JsonReader"
          }
         ],
         "listeners" : {
          "beforeload" : [
           "function (_self, options)",
           "{",
           "    options.params = options.params || {};",
           "    if (typeof(_this.data) == 'undefined') {",
           "        return false;",
           "    }",
           "    if(_this.data.id * 1 >= 0)",
           "    {",
           "        options.params.onid = _this.data.id;",
           "",
           "        options.params.ontable = (_this.data.module) ? _this.data.module : 'crm_mailing_list_message';",
           "    }",
           "}"
          ]
         },
         "remoteSort" : true,
         "xtype" : "Store"
        },
        {
         "$ xns" : "Roo",
         "* prop" : "toolbar",
         "items" : [
          {
           "$ icon" : "Roo.rootURL + 'images/default/dd/drop-add.gif'",
           "$ xns" : "Roo.Toolbar",
           "cls" : "x-btn-text-icon",
           "listeners" : {
            "|click" : [
             "function()",
             "{",
             "    var id = _this.form.findField('id').getValue();",
             "    ",
             "    if(id*1 < 1){",
             "        Roo.MessageBox.alert('Error', 'Please save the email template first');",
             "        return;",
             "    }",
             "    ",
             "    var ontable = (_this.data.module) ? _this.data.module : 'crm_mailing_list_message';",
             "    ",
             "    Pman.Dialog.Image.show( { id : 0, onid: id, ontable: ontable }, function() {",
             "        _this.igrid.getDataSource().load({});",
             "    });",
             "}",
             ""
            ]
           },
           "text" : "Add",
           "xtype" : "Button"
          },
          {
           "$ icon" : "rootURL + '/Pman/templates/images/trash.gif'",
           "$ xns" : "Roo.Toolbar",
           "cls" : "x-btn-text-icon",
           "listeners" : {
            "|click" : [
             "function()",
             "{",
             "           Pman.genericDelete({grid: _this.igrid}, 'Images');",
             "}",
             "        "
            ]
           },
           "text" : "Delete",
           "xtype" : "Button"
          }
         ],
         "xtype" : "Toolbar"
        },
        {
         "$ renderer" : [
          "function(v,x,r)",
          "{",
          "    var width = r.data.width;",
          "    var height = r.data.height;",
          "    ",
          "    if(width > 50){",
          "        height = Math.round(height * 50 / width);",
          "        width = 50;",
          "    }",
          "    ",
          "   return '<img src=\"' + baseURL + '/Images/' + r.data.id + '/' + r.data.filename + '\" width=\"' + width + '\" height=\"' + height + '\" />';",
          "}"
         ],
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "filename",
         "header" : "Filename",
         "width" : 300,
         "xtype" : "ColumnModel"
        },
        {
         "$ renderer" : "function(v) { return String.format('{0}', v); }",
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "displayorder",
         "header" : "Displayorder",
         "width" : 75,
         "xtype" : "ColumnModel"
        },
        {
         "$ renderer" : "function(v) { return String.format('{0}', v); }",
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "title",
         "header" : "Title",
         "width" : 75,
         "xtype" : "ColumnModel"
        }
       ],
       "listeners" : {
        "|render" : [
         "function() ",
         "{",
         "    _this.igrid = this; ",
         "    //_this.dialog = Pman.Dialog.FILL_IN",
         "    if (_this.ipanel.active) {",
         "   //    _this.igrid.ds.load({});",
         "    }",
         "}"
        ]
       },
       "loadMask" : true,
       "xtype" : "Grid"
      }
     ],
     "listeners" : {
      "|activate" : [
       "function() {",
       "    _this.ipanel = this;",
       "    if (_this.igrid) {",
       "       _this.igrid.ds.load({});",
       "    }",
       "}"
      ]
     },
     "region" : "east",
     "tableName" : "Images",
     "title" : "Images / Attachments",
     "xtype" : "GridPanel"
    },
    {
     "$ xns" : "Roo",
     "* prop" : "buttons[]",
     "listeners" : {
      "click" : [
       "function (_self, e)",
       "{",
       "    _this.dialog.hide();",
       "}"
      ]
     },
     "text" : "Cancel",
     "xtype" : "Button"
    },
    {
     "$ xns" : "Roo",
     "* prop" : "buttons[]",
     "listeners" : {
      "click" : [
       "function (_self, e)",
       "{",
       "",
       "    // do some checks?",
       "    _this.form.preValidate(function(res) {",
       "        if (!res) {",
       "            return; //failed.",
       "        }",
       "         _this.form.doAction(\"submit\");",
       "    });",
       "",
       "}"
      ]
     },
     "text" : "Save",
     "xtype" : "Button"
    },
    {
     "$ xns" : "Roo",
     "* prop" : "buttons[]",
     "listeners" : {
      "click" : [
       "function (_self, e)",
       "{",
       "    _this.dialog.hide();",
       "    ",
       "    if(typeof(Pman.Dialog.CrmMailingListQueue) != 'undefined' && typeof(Pman.Tab.Crm) != 'undefined') {",
       "        Pman.Dialog.CrmMailingListQueue.show( {",
       "            id : 0,",
       "            message_id : _this.form.findField('id').getValue(),",
       "            message_id_name : _this.form.findField('name').getValue()",
       "        }, function() {",
       "            // change the tab to queue...",
       "            var i = Pman.Tab.Crm.layout.getRegion('center').panels.indexOf(Pman.Tab.Crm.layout.getRegion('center').getActivePanel());",
       "            Pman.Tab.Crm.layout.getRegion('center').showPanel(i + 1);",
       "        });",
       "    }",
       "    ",
       "}"
      ],
      "render" : [
       "function (_self)",
       "{",
       "    if(typeof(Pman.Dialog.CrmMailingListQueue) == 'undefined' || typeof(Pman.Tab.Crm) == 'undefined') {",
       "        _self.hide();",
       "    }",
       "}"
      ]
     },
     "text" : "Send",
     "xtype" : "Button"
    }
   ],
   "listeners" : {
    "show" : [
     "function (_self)",
     "{",
     "    ",
     "    _self.layout.getRegion('center').showPanel(0);",
     "    var w = Roo.lib.Dom.getViewWidth();\r",
     "    var h = Roo.lib.Dom.getViewHeight();    \r    this.resizeTo(w-50, h-50);\r",
     "    this.center();\r    ",
     "    var ew = Math.max(250, w-320);\r",
     "    var eh = Math.max(250, h-350) ;\r",
     "    var e = _this.dialog.layout.getRegion('east');",
     "    if (e.visible) {",
     "        e.hide();",
     "    }",
     "    ",
     "    var el = _self.getEl();",
     "    var elw = el.dom.clientWidth;",
     "    ",
     "    var bdtext = _this.form.findField('bodytext');",
     "    var ptext = _this.form.findField('plaintext');",
     "    if(bdtext.resizeEl){",
     "        bdtext.width = elw-100;",
     "        bdtext.resizeEl.resizeTo.defer(110, bdtext.resizeEl,[ bdtext.width, bdtext.height  ] );",
     "        ptext.setSize(bdtext.width , bdtext.height);",
     "    }",
     "    ",
     "}"
    ]
   },
   "modal" : true,
   "resizable" : true,
   "title" : "Edit / Create Message",
   "width" : 800,
   "xtype" : "LayoutDialog"
  }
 ],
 "modOrder" : "001",
 "name" : "Pman.Dialog.CoreEmail",
 "named_strings" : {
  "active_boxLabel" : "28690be026c0bb9003aa58e45e5662ca",
  "active_value" : "c4ca4238a0b923820dcc509a6f75849b",
  "bcc_group_id_name_emptyText" : "2c466a2c159463f1d9ef5a7b57b52827",
  "bcc_group_id_name_fieldLabel" : "68b00d723d37122f64da8d9939f836f0",
  "bcc_group_id_name_loadingText" : "1243daf593fa297e07ab03bf06d925af",
  "bcc_group_id_name_qtip" : "2c466a2c159463f1d9ef5a7b57b52827",
  "from_email_fieldLabel" : "b357b524e740bc85b9790a0712d84a30",
  "from_name_fieldLabel" : "5da618e8e4b89c66fe86e32cdafde142",
  "language_name_fieldLabel" : "4994a8ffeba4ac3140beb89e8d41f174",
  "name_fieldLabel" : "b20a8b77b05d53b4e695738731400c85",
  "subject_fieldLabel" : "c7892ebbb139886662c6f2fc8c450710",
  "test_class_fieldLabel" : "b337c8a67244afb6551ee1f8f9717676"
 },
 "parent" : "",
 "path" : "/home/leon/gitlive/web.MediaOutreach/Pman/Core/Pman.Dialog.CoreEmail.bjs",
 "permname" : "",
 "strings" : {
  "1243daf593fa297e07ab03bf06d925af" : "Searching...",
  "1351017ac6423911223bc19a8cb7c653" : "Filename",
  "2393ad754ba179442d85e415d1d5167c" : "Displayorder",
  "28690be026c0bb9003aa58e45e5662ca" : "Enabled - will be sent out",
  "2c466a2c159463f1d9ef5a7b57b52827" : "Select BCC Group",
  "2f26e35d61be90501e099089dc533638" : "Select Images",
  "308f2757bfc9ce92fb00ff93fdffd279" : "Images / Attachments",
  "31fde7b05ac8952dacf4af8a704074ec" : "Preview",
  "396ecabf0cd1f9503e591418851ef406" : "Edit / Create Message",
  "4994a8ffeba4ac3140beb89e8d41f174" : "Language",
  "4c2a8fe7eaf24721cc7a9f0175115bd4" : "Message",
  "5b8ef4e762c00a15a41cfc26dc3ef99c" : "Send me a test copy",
  "5da618e8e4b89c66fe86e32cdafde142" : "From",
  "5feb9bf3c03b32635135006cbacb9542" : "Insert Field",
  "68b00d723d37122f64da8d9939f836f0" : "BCC Group",
  "6f16a5f8ff5d75ab84c018adacdfcbb7" : "Field",
  "94966d90747b97d1f0f206c98a8b1ac3" : "Send",
  "962b90039a542a29cedd51d87a9f28a1" : "Html Editor",
  "b20a8b77b05d53b4e695738731400c85" : "Mailout Name",
  "b337c8a67244afb6551ee1f8f9717676" : "Test Class <BR/> (for system reference only)",
  "b357b524e740bc85b9790a0712d84a30" : "Email address",
  "b78a3223503896721cca1303f776159b" : "Title",
  "b9c49611cfda3259a2b837b39489e650" : "Add Image",
  "bd88a20b53a47f7b5704a83a15ff5506" : "Saved Version",
  "c4ca4238a0b923820dcc509a6f75849b" : "1",
  "c7892ebbb139886662c6f2fc8c450710" : "Subject",
  "c9cc8cce247e49bae79f15173ce97354" : "Save",
  "e44b145bd8b49b06e0ad2ced1ad56466" : "Plain Text",
  "e9968623956c15023d54335ea3699855" : "Convert Html to Text",
  "ea30b40c3caf28acb29198d20d243e54" : "Images / Attachments >>",
  "ea4788705e6873b424c65e91c2846b19" : "Cancel",
  "ec211f7c20af43e742bf2570c3cb84f9" : "Add",
  "f2a6c498fb90ee345d997f888fce3b18" : "Delete",
  "f3017f202748e13d3554a15cbbd1b767" : "Refresh from Stripo",
  "fff0d600f8a0b5e19e88bfb821dd1157" : "Images"
 },
 "title" : ""
}