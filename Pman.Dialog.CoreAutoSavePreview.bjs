{
    "id": "roo-file-348",
    "name": "Pman.Dialog.CoreAutoSavePreview",
    "parent": "",
    "title": "",
    "path": "/home/edward/gitlive/Pman.Core/Pman.Dialog.CoreAutoSavePreview.bjs",
    "items": [
        {
            "background": false,
            "closable": false,
            "collapsible": false,
            "height": 500,
            "modal": true,
            "resizable": false,
            "title": "Saved Version",
            "width": 800,
            "xtype": "LayoutDialog",
            "|xns": "Roo",
            "items": [
                {
                    "*prop": "center",
                    "titlebar": false,
                    "xtype": "LayoutRegion",
                    "|xns": "Roo"
                },
                {
                    "*prop": "west",
                    "split": true,
                    "width": 300,
                    "xtype": "LayoutRegion",
                    "|xns": "Roo"
                },
                {
                    "listeners": {
                        "|activate": "function() {\n    _this.panel = this;\n    if (_this.grid) {\n        _this.grid.footer.onClick('first');\n    }\n}"
                    },
                    "background": false,
                    "fitContainer": true,
                    "fitToframe": true,
                    "region": "west",
                    "tableName": "Events",
                    "title": "Events",
                    "xtype": "GridPanel",
                    "|xns": "Roo",
                    "items": [
                        {
                            "listeners": {
                                "|render": "function() { \n    _this.grid = this; \n    //_this.dialog = Pman.Dialog.FILL_IN\n    if (_this.panel.active) {\n       this.footer.onClick('first');\n    }\n}"
                            },
                            "*prop": "grid",
                            "autoExpandColumn": "remarks",
                            "loadMask": true,
                            "xtype": "Grid",
                            "|xns": "Roo.grid",
                            "items": [
                                {
                                    "listeners": {
                                        "afterselectionchange": "function (_self)\n{\n    // load detail log in _this.viewPanel;\n    if (!this.getSelected()) {\n        this.viewPanel.setContent(\"Nothing Selected\");\n        return;\n    }\n    var id = this.getSelected().data.id;\n    _this.viewPanel.load( { url : baseURL + \"/Admin/EventView/\" + id + \".html\" });\n    \n}"
                                    },
                                    "*prop": "sm",
                                    "singleSelect": true,
                                    "xtype": "RowSelectionModel",
                                    "|xns": "Roo.grid"
                                },
                                {
                                    "listeners": {
                                        "|beforeload": "function (_self, o)\n{\n    if (!Pman.buildCompleted) {\n        return false;\n    }\n   \n   \n   if (! _this.personSel) {\n    return false;\n    }\n    o.params = o.params || {};\n    o.params.person_id = _this.personSel.getValue();\n    var act = _this.actionSel.getValue();\n    if (act.length) {\n        o.params.action = act;\n    }\n    var tbl = _this.affectSel.getValue();\n    if (tbl.length) {\n        o.params.on_table = tbl;\n    }\n    act = _this.dateFrom.getValue();\n    if (act.format) {\n        o.params['query[from]'] = act.format('Y-m-d');\n    }\n    act = _this.dateTo.getValue();\n    if (act.format) {\n        o.params['query[to]'] = act.format('Y-m-d');\n    }\n \n    \n    /*\n    act = _this.groupedCombo.getValue();\n    o.params['query[grouped]'] = act;\n    if (o.params['query[grouped]'] == 'gr') {\n    \n        if (!tbl.length) {\n            Roo.MessageBox.alert(\"Error\", \"Select a table to group results on\");\n            return false;\n        }\n//        o.params['_columns']  = \n        o.params['_distinct'] = 'on_id';\n        \n        \n    }\n    \n    */\n\n    \n}"
                                    },
                                    "*prop": "dataSource",
                                    "remoteSort": true,
                                    "xtype": "Store",
                                    "|sortInfo": "{ field: 'event_when', direction: 'DESC'}",
                                    "|xns": "Roo.data",
                                    "items": [
                                        {
                                            "|xns": "Roo.data",
                                            "xtype": "JsonReader",
                                            "totalProperty": "total",
                                            "root": "data",
                                            "*prop": "reader",
                                            "id": "id",
                                            "|fields": "[\n    {\n        'name': 'id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_name',\n        'type': 'string'\n    },\n    {\n        'name': 'event_when',\n        'type': 'date',\n        'dateFormat': 'Y-m-d'\n    },\n    {\n        'name': 'action',\n        'type': 'string'\n    },\n    {\n        'name': 'ipaddr',\n        'type': 'string'\n    },\n    {\n        'name': 'on_id',\n        'type': 'int'\n    },\n    {\n        'name': 'on_table',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id',\n        'type': 'int'\n    },\n    {\n        'name': 'remarks',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_office_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_name',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_phone',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_fax',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_email',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_company_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_role',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_active',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_remarks',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_passwd',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_owner_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_lang',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_no_reset_sent',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_action_type',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_project_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_deleted_by',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_deleted_dt',\n        'type': 'date'\n    }\n]"
                                        },
                                        {
                                            "*prop": "proxy",
                                            "xtype": "HttpProxy",
                                            "method": "GET",
                                            "|url": "baseURL + '/Roo/Events.php'",
                                            "listeners": {},
                                            "|xns": "Roo.data"
                                        }
                                    ]
                                },
                                {
                                    "*prop": "footer",
                                    "xtype": "PagingToolbar",
                                    "pageSize": 25,
                                    "displayInfo": true,
                                    "displayMsg": "Displaying Events  {0} - {1} of {2}",
                                    "emptyMsg": "No Events found",
                                    "|xns": "Roo"
                                },
                                {
                                    "*prop": "colModel[]",
                                    "dataIndex": "event_when",
                                    "header": "Date",
                                    "width": 100,
                                    "xtype": "ColumnModel",
                                    "|renderer": "function(v) { return v ? v.dateFormat('d/m/Y H:i') : ''; }",
                                    "|xns": "Roo.grid"
                                },
                                {
                                    "*prop": "colModel[]",
                                    "dataIndex": "on_table",
                                    "header": "Affected",
                                    "width": 100,
                                    "xtype": "ColumnModel",
                                    "|renderer": "function(v) {                     \n    return String.format('{0})', v ? v : '');  \n}",
                                    "|xns": "Roo.grid"
                                }
                            ]
                        }
                    ]
                },
                {
                    "listeners": {
                        "|click": "function() {\n    _this.dialog.hide();\n}"
                    },
                    "*prop": "buttons[]",
                    "text": "Cancel",
                    "xtype": "Button",
                    "|xns": "Roo"
                },
                {
                    "listeners": {
                        "|click": "function() {\n    _this.dialog.hide();\n}"
                    },
                    "*prop": "buttons[]",
                    "text": "OK",
                    "xtype": "Button",
                    "|xns": "Roo"
                }
            ]
        }
    ],
    "permname": "",
    "modOrder": "001"
}